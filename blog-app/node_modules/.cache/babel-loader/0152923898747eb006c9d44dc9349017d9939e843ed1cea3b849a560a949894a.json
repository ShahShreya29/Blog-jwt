{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = [];\nconst BlogSlice = createSlice({\n  name: \"blogs\",\n  initialState,\n  reducers: {\n    addBlog: (state, action) => {\n      state.push(action.payload);\n    }\n  },\n  DeleteBlog: (state, action) => {\n    const {\n      id\n    } = action.payload;\n    const blog = state.find(blogs => blogs.id === id);\n    if (blog) {\n      return state.filter(blogs => blogs.id !== id);\n    }\n  }\n});\nexport const {\n  addBlog,\n  DeleteBlog\n} = BlogSlice.actions;\nexport default BlogSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","BlogSlice","name","reducers","addBlog","state","action","push","payload","DeleteBlog","id","blog","find","blogs","filter","actions","reducer"],"sources":["/home/shreya/Documents/react/blog-app/src/BlogReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState=[\n   \n]\n\nconst BlogSlice = createSlice({\n    name : \"blogs\",\n    initialState,\n    reducers:{\n        addBlog: (state, action) => {\n           state.push(action.payload)\n        }\n    },\n    DeleteBlog: (state,action) =>{\n        const{id} = action.payload;\n        const blog = state.find(blogs => blogs.id === id);\n        if(blog){\n            return state.filter(blogs=> blogs.id !== id)\n        }         \n    }\n})\n\nexport const {addBlog, DeleteBlog} = BlogSlice.actions\nexport default BlogSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAC,EAElB;AAED,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC1BG,IAAI,EAAG,OAAO;EACdF,YAAY;EACZG,QAAQ,EAAC;IACLC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACzBD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC7B;EACJ,CAAC;EACDC,UAAU,EAAEA,CAACJ,KAAK,EAACC,MAAM,KAAI;IACzB,MAAK;MAACI;IAAE,CAAC,GAAGJ,MAAM,CAACE,OAAO;IAC1B,MAAMG,IAAI,GAAGN,KAAK,CAACO,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACH,EAAE,KAAKA,EAAE,CAAC;IACjD,IAAGC,IAAI,EAAC;MACJ,OAAON,KAAK,CAACS,MAAM,CAACD,KAAK,IAAGA,KAAK,CAACH,EAAE,KAAKA,EAAE,CAAC;IAChD;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACN,OAAO;EAAEK;AAAU,CAAC,GAAGR,SAAS,CAACc,OAAO;AACtD,eAAed,SAAS,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}