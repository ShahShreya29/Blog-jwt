{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";const initialState=[];const blogSlice=createSlice({name:\"blogs\",initialState,reducers:{addBlog:(state,action)=>{const newBlog={id:state.length+1,...action.payload};const allBlogs=[...state,newBlog];localStorage.setItem(\"blogs\",JSON.stringify(allBlogs));return allBlogs;},deleteBlog:(state,action)=>{const id=action.payload;let blogs=JSON.parse(localStorage.getItem(\"blogs\"));blogs=blogs.filter(blog=>blog.id!==+id);localStorage.setItem(\"blogs\",JSON.stringify(blogs));return blogs;},editBlog:(state,action)=>{const{id,...updatedBlogData}=action.payload;const blogIndex=state.findIndex(blog=>blog.id===id);if(blogIndex!==-1){state[blogIndex]={...state[blogIndex],...updatedBlogData};localStorage.setItem(\"blogs\",JSON.stringify(state));}}}});export const{addBlog,deleteBlog,editBlog}=blogSlice.actions;export default blogSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","blogSlice","name","reducers","addBlog","state","action","newBlog","id","length","payload","allBlogs","localStorage","setItem","JSON","stringify","deleteBlog","blogs","parse","getItem","filter","blog","editBlog","updatedBlogData","blogIndex","findIndex","actions","reducer"],"sources":["/home/shreya/Documents/react/blog-app/src/BlogReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst blogSlice = createSlice({\n  name: \"blogs\",\n  initialState,\n  reducers: {\n    addBlog: (state, action) => {\n      const newBlog = {\n        id: state.length + 1,\n        ...action.payload,\n      };\n      const allBlogs = [...state, newBlog];\n      localStorage.setItem(\"blogs\", JSON.stringify(allBlogs));\n      return allBlogs;\n    },\n    deleteBlog: (state, action) => {\n      const id = action.payload;\n      let blogs = JSON.parse(localStorage.getItem(\"blogs\"));\n      blogs = blogs.filter((blog) => blog.id !== +id);\n      localStorage.setItem(\"blogs\", JSON.stringify(blogs));\n      return blogs;\n    },\n\n    editBlog: (state, action) => {\n      const { id, ...updatedBlogData } = action.payload;\n      const blogIndex = state.findIndex((blog) => blog.id === id);\n      if (blogIndex !== -1) {\n        state[blogIndex] = { ...state[blogIndex], ...updatedBlogData };\n        localStorage.setItem(\"blogs\", JSON.stringify(state));\n      }\n    },\n  },\n});\n\nexport const { addBlog, deleteBlog, editBlog } = blogSlice.actions;\nexport default blogSlice.reducer;\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,KAAM,CAAAC,YAAY,CAAG,EAAE,CAEvB,KAAM,CAAAC,SAAS,CAAGF,WAAW,CAAC,CAC5BG,IAAI,CAAE,OAAO,CACbF,YAAY,CACZG,QAAQ,CAAE,CACRC,OAAO,CAAEA,CAACC,KAAK,CAAEC,MAAM,GAAK,CAC1B,KAAM,CAAAC,OAAO,CAAG,CACdC,EAAE,CAAEH,KAAK,CAACI,MAAM,CAAG,CAAC,CACpB,GAAGH,MAAM,CAACI,OACZ,CAAC,CACD,KAAM,CAAAC,QAAQ,CAAG,CAAC,GAAGN,KAAK,CAAEE,OAAO,CAAC,CACpCK,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC,CAAC,CACvD,MAAO,CAAAA,QAAQ,CACjB,CAAC,CACDK,UAAU,CAAEA,CAACX,KAAK,CAAEC,MAAM,GAAK,CAC7B,KAAM,CAAAE,EAAE,CAAGF,MAAM,CAACI,OAAO,CACzB,GAAI,CAAAO,KAAK,CAAGH,IAAI,CAACI,KAAK,CAACN,YAAY,CAACO,OAAO,CAAC,OAAO,CAAC,CAAC,CACrDF,KAAK,CAAGA,KAAK,CAACG,MAAM,CAAEC,IAAI,EAAKA,IAAI,CAACb,EAAE,GAAK,CAACA,EAAE,CAAC,CAC/CI,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEC,IAAI,CAACC,SAAS,CAACE,KAAK,CAAC,CAAC,CACpD,MAAO,CAAAA,KAAK,CACd,CAAC,CAEDK,QAAQ,CAAEA,CAACjB,KAAK,CAAEC,MAAM,GAAK,CAC3B,KAAM,CAAEE,EAAE,CAAE,GAAGe,eAAgB,CAAC,CAAGjB,MAAM,CAACI,OAAO,CACjD,KAAM,CAAAc,SAAS,CAAGnB,KAAK,CAACoB,SAAS,CAAEJ,IAAI,EAAKA,IAAI,CAACb,EAAE,GAAKA,EAAE,CAAC,CAC3D,GAAIgB,SAAS,GAAK,CAAC,CAAC,CAAE,CACpBnB,KAAK,CAACmB,SAAS,CAAC,CAAG,CAAE,GAAGnB,KAAK,CAACmB,SAAS,CAAC,CAAE,GAAGD,eAAgB,CAAC,CAC9DX,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEC,IAAI,CAACC,SAAS,CAACV,KAAK,CAAC,CAAC,CACtD,CACF,CACF,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAED,OAAO,CAAEY,UAAU,CAAEM,QAAS,CAAC,CAAGrB,SAAS,CAACyB,OAAO,CAClE,cAAe,CAAAzB,SAAS,CAAC0B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}