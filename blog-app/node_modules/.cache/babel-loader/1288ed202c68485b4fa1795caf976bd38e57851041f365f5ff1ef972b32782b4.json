{"ast":null,"code":"var _jsxFileName = \"/home/shreya/Documents/jwt/blog-app/src/Components/LoginForm.js\",\n  _s = $RefreshSig$();\n// import TextField from \"./TextField\";\n// import AddBtn from \"./AddBtn\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import { Formik, Form } from \"formik\";\n// import * as yup from \"yup\";\n// import { useState } from \"react\";\n// import axios from \"axios\";\n\n// const LoginForm = () => {\n//   const validate = yup.object({\n//     email: yup.string().email(\"invalid email\").required(\"email is required\"),\n//     password: yup\n//       .string()\n//       .required(\"Password is Required\")\n//       .min(6, \"At Least 6 Character\"),\n//   });\n//   const navigate = useNavigate();\n\n//   const [userData, setUserData] = useState({\n//     email: \"\",\n//     password: \"\",\n//   });\n\n//   const handleLogin = async (values) => {\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:8081/api/login\",\n//         values\n//       );\n//       console.log(\"res\", response.data);\n//       localStorage.setItem(\n//         \"login\",\n//         JSON.stringify({\n//           login: true,\n//           name:response.data.existingUser.name,\n//        token: response.data.accessToken,\n//          refreshToken:response.data.refreshToken\n//         })\n//       );\n//       console.log(\"resTOKEN\",response.data.refreshToken);\n//       sessionStorage.setItem(\"refreshToken\",response.data.refreshToken)\n//       let rt = sessionStorage.getItem(\"refreshToken\")\n//       console.log(rt);\n\n//       alert(\"Login Successfully Done \" + \" \" + response.data.existingUser.name);\n//       setUserData({\n//         email: \"\",\n//         password: \"\",\n//       });\n\n//       if (response.data.existingUser.role === \"admin\") {\n//         navigate(\"/BlogList\");\n//       } else {\n//         navigate(\"/Blogs\");\n//       }\n//     } catch (error) {\n//       alert(\"User not found\");\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <>\n//       <Formik\n//         initialValues={{\n//           email: \"\",\n//           password: \"\",\n//         }}\n//         validationSchema={validate}\n//         onSubmit={handleLogin}\n//       >\n//         {(Formik) => (\n//           <div className=\"container m-5\">\n//             <Form>\n//               <div className=\"row justify-content-center\">\n//                 <div className=\"form-group col-md-4 col-md-offset-5 align-center \">\n//                   <h1 className=\"m-5 text-center\">Login </h1>\n//                   <TextField label=\"Email: \" type=\"email\" name=\"email\" />\n//                   <TextField\n//                     label=\"Password: \"\n//                     type=\"password\"\n//                     name=\"password\"\n//                   />\n//                   <div>\n//                     <AddBtn\n//                       style={{\n//                         marginLeft: \"130px\",\n//                         marginTop: \"10px\",\n//                         backgroundColor: \"#1070ef\",\n//                         color: \"white\",\n//                         width: \"99px\",\n//                       }}\n//                     >\n//                       LogIn\n//                     </AddBtn>\n//                   </div>\n\n//                 </div>\n//                 <h6 className=\"text-center m-3\">\n//                     PLEASE <Link to=\"/\">SIGNUP!!</Link> FIRST\n//                   </h6>\n//               </div>\n//             </Form>\n//           </div>\n//         )}\n//       </Formik>\n//     </>\n//   );\n// };\n\n// export default LoginForm;\n\n// // eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MzFkNjdlYmFlYzdmZDliNjY2ZmE3NyIsImlhdCI6MTcxNTMzNDE5NSwiZXhwIjoxNzE1MzM3Nzk1fQ.DPHTya_nSIRehNwkojrIYCO50hNDp3A10RzP0EVgpDU\n// // eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MzFkNjdlYmFlYzdmZDliNjY2ZmE3NyIsImlhdCI6MTcxNTMzNDE5NSwiZXhwIjoxNzE1MzM0MjU1fQ.Slahq73Hxn4h7MsavGp-Bp5U0RGHZ76_winxn4uIceg\"\n\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const validate = yup.object().shape({\n    email: yup.string().email(\"Invalid email\").required(\"Email is required\"),\n    password: yup.string().required(\"Password is required\")\n  });\n  const handleSubmit = async (values, {\n    setSubmitting\n  }) => {\n    try {\n      const response = await axios.post(\"http://localhost:8081/api/users/login\", values);\n      const {\n        name,\n        AToken\n      } = response.data;\n      localStorage.setItem(\"token\", AToken);\n      navigate(\"/dashboard\");\n    } catch (error) {\n      setError(\"Invalid email or password\");\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      validationSchema: validate,\n      onSubmit: handleSubmit,\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"email\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"password\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"rpbPklOf4toI5u/2rQsGlXHhdoI=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","Link","useNavigate","Formik","Form","Field","ErrorMessage","yup","axios","jsxDEV","_jsxDEV","LoginForm","_s","error","setError","navigate","validate","object","shape","email","string","required","password","handleSubmit","values","setSubmitting","response","post","name","AToken","data","localStorage","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","validationSchema","onSubmit","isSubmitting","type","component","disabled","to","_c","$RefreshReg$"],"sources":["/home/shreya/Documents/jwt/blog-app/src/Components/LoginForm.js"],"sourcesContent":["// import TextField from \"./TextField\";\n// import AddBtn from \"./AddBtn\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import { Formik, Form } from \"formik\";\n// import * as yup from \"yup\";\n// import { useState } from \"react\";\n// import axios from \"axios\";\n\n// const LoginForm = () => {\n//   const validate = yup.object({\n//     email: yup.string().email(\"invalid email\").required(\"email is required\"),\n//     password: yup\n//       .string()\n//       .required(\"Password is Required\")\n//       .min(6, \"At Least 6 Character\"),\n//   });\n//   const navigate = useNavigate();\n\n//   const [userData, setUserData] = useState({\n//     email: \"\",\n//     password: \"\",\n//   });\n\n//   const handleLogin = async (values) => {\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:8081/api/login\",\n//         values\n//       );\n//       console.log(\"res\", response.data);\n//       localStorage.setItem(\n//         \"login\",\n//         JSON.stringify({\n//           login: true,\n//           name:response.data.existingUser.name,\n//        token: response.data.accessToken,\n//          refreshToken:response.data.refreshToken\n//         })\n//       );\n//       console.log(\"resTOKEN\",response.data.refreshToken);\n//       sessionStorage.setItem(\"refreshToken\",response.data.refreshToken)\n//       let rt = sessionStorage.getItem(\"refreshToken\")\n//       console.log(rt);\n\n//       alert(\"Login Successfully Done \" + \" \" + response.data.existingUser.name);\n//       setUserData({\n//         email: \"\",\n//         password: \"\",\n//       });\n\n//       if (response.data.existingUser.role === \"admin\") {\n//         navigate(\"/BlogList\");\n//       } else {\n//         navigate(\"/Blogs\");\n//       }\n//     } catch (error) {\n//       alert(\"User not found\");\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <>\n//       <Formik\n//         initialValues={{\n//           email: \"\",\n//           password: \"\",\n//         }}\n//         validationSchema={validate}\n//         onSubmit={handleLogin}\n//       >\n//         {(Formik) => (\n//           <div className=\"container m-5\">\n//             <Form>\n//               <div className=\"row justify-content-center\">\n//                 <div className=\"form-group col-md-4 col-md-offset-5 align-center \">\n//                   <h1 className=\"m-5 text-center\">Login </h1>\n//                   <TextField label=\"Email: \" type=\"email\" name=\"email\" />\n//                   <TextField\n//                     label=\"Password: \"\n//                     type=\"password\"\n//                     name=\"password\"\n//                   />\n//                   <div>\n//                     <AddBtn\n//                       style={{\n//                         marginLeft: \"130px\",\n//                         marginTop: \"10px\",\n//                         backgroundColor: \"#1070ef\",\n//                         color: \"white\",\n//                         width: \"99px\",\n//                       }}\n//                     >\n//                       LogIn\n//                     </AddBtn>\n//                   </div>\n                \n//                 </div>\n//                 <h6 className=\"text-center m-3\">\n//                     PLEASE <Link to=\"/\">SIGNUP!!</Link> FIRST\n//                   </h6>\n//               </div>\n//             </Form>\n//           </div>\n//         )}\n//       </Formik>\n//     </>\n//   );\n// };\n\n// export default LoginForm;\n\n\n\n\n\n// // eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MzFkNjdlYmFlYzdmZDliNjY2ZmE3NyIsImlhdCI6MTcxNTMzNDE5NSwiZXhwIjoxNzE1MzM3Nzk1fQ.DPHTya_nSIRehNwkojrIYCO50hNDp3A10RzP0EVgpDU\n// // eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MzFkNjdlYmFlYzdmZDliNjY2ZmE3NyIsImlhdCI6MTcxNTMzNDE5NSwiZXhwIjoxNzE1MzM0MjU1fQ.Slahq73Hxn4h7MsavGp-Bp5U0RGHZ76_winxn4uIceg\"\n\n\n\n\n\n\n\n\n\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\n\nconst LoginForm = () => {\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  const validate = yup.object().shape({\n    email: yup.string().email(\"Invalid email\").required(\"Email is required\"),\n    password: yup.string().required(\"Password is required\"),\n  });\n\n  const handleSubmit = async (values, { setSubmitting }) => {\n    try {\n      const response = await axios.post(\n        \"http://localhost:8081/api/users/login\",\n        values\n      );\n\n      const { name, AToken } = response.data;\n      localStorage.setItem(\"token\", AToken);\n      navigate(\"/dashboard\");\n    } catch (error) {\n      setError(\"Invalid email or password\");\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Login</h1>\n      <Formik\n        initialValues={{ email: \"\", password: \"\" }}\n        validationSchema={validate}\n        onSubmit={handleSubmit}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <div>\n              <label>Email:</label>\n              <Field type=\"email\" name=\"email\" />\n              <ErrorMessage name=\"email\" component=\"div\" />\n            </div>\n            <div>\n              <label>Password:</label>\n              <Field type=\"password\" name=\"password\" />\n              <ErrorMessage name=\"password\" component=\"div\" />\n            </div>\n            {error && <div>{error}</div>}\n            <button type=\"submit\" disabled={isSubmitting}>\n              Log In\n            </button>\n          </Form>\n        )}\n      </Formik>\n      <p>\n        Don't have an account? <Link to=\"/signup\">Sign Up</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default LoginForm;\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}