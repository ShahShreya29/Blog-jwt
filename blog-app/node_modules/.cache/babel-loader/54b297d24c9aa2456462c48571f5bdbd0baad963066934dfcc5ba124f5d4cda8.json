{"ast":null,"code":"import axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"http://localhost:8081/\" // our API base URL\n});\n\n// Request interceptor for adding the bearer token\napi.interceptors.request.use(config => {\n  const token = JSON.parse(localStorage.getItem(\"login\"));\n  if (token) {\n    config.headers.Authorization = `Bearer ${token.token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// API endpoints\nexport const getUser = () => {\n  return api.get(\"/user\");\n};\nexport const deleteUser = userId => {\n  return api.delete(`/user/${userId}`);\n};\n\n// Export the api instance\nexport default api;\n\n// https://coderomeos.org/axios-interceptors-in-a-react-application\n\n// // Create axios instance for specific base URL\n// const axiosInstance = axios.create({\n//   baseURL: \"http://localhost:8081/api/\",\n// });\n\n// // Add request interceptor for attaching token to requests\n// axiosInstance.interceptors.request.use(\n//   (config) => {\n//     const token = JSON.parse(localStorage.getItem(\"login\"));\n//     if (token) {\n//       config.headers.Authorization = `Bearer ${token.token}`;\n//     }\n//     return config;\n//   },\n//   (error) => {\n//     return Promise.reject(error);\n//   }\n// );\n\n// Add response interceptor for handling token expiration\napi.interceptors.response.use(response => {\n  console.log(\"RES\", response);\n  return response;\n}, async error => {\n  if (error.response && error.response.status === 419) {\n    console.log(\"Token expired, refreshing...\");\n    try {\n      const refreshToken = JSON.parse(localStorage.getItem(\"login\")).refreshToken;\n      if (!refreshToken) {\n        console.log(\"No refresh token provided.\");\n        throw new Error(\"No refresh token provided.\");\n      } else {\n        console.log(\"refresh token provided.\", refreshToken);\n      }\n      const refreshResponse = await axios.get(`http://localhost:4000/api/users/refreshToken`, {\n        headers: {\n          \"refresh-token\": refreshToken\n        }\n      });\n      console.log(\"-----------------resrefresh\", refreshResponse);\n      const newtoken = refreshResponse.data.token;\n      console.log(\"hellloooo token\", newtoken);\n      localStorage.setItem(\"token\", newtoken);\n\n      // Retry the original request with the new access token\n      const originalRequest = error.config;\n      originalRequest.headers.Authorization = `Bearer ${newtoken}`;\n      return axiosInstance(originalRequest);\n    } catch (refreshError) {\n      console.error(\"Error refreshing access token:\", refreshError);\n\n      // If the refresh token has expired, dispatch logout action\n      if (refreshError.response.status === 401 && refreshError.response.data.message === \"Refresh token has expired\") return Promise.reject(error);\n    }\n  }\n});","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","token","JSON","parse","localStorage","getItem","headers","Authorization","error","Promise","reject","getUser","get","deleteUser","userId","delete","response","console","log","status","refreshToken","Error","refreshResponse","newtoken","data","setItem","originalRequest","axiosInstance","refreshError","message"],"sources":["/home/shreya/Documents/jwt/blog-app/src/config.js"],"sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"http://localhost:8081/\", // our API base URL\n});\n\n// Request interceptor for adding the bearer token\napi.interceptors.request.use(\n  (config) => {\n    const token = JSON.parse(localStorage.getItem(\"login\"));\n    if (token) {\n      config.headers.Authorization = `Bearer ${token.token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// API endpoints\nexport const getUser = () => {\n  return api.get(\"/user\");\n};\n\nexport const deleteUser = (userId) => {\n  return api.delete(`/user/${userId}`);\n};\n\n// Export the api instance\nexport default api;\n\n// https://coderomeos.org/axios-interceptors-in-a-react-application\n\n// // Create axios instance for specific base URL\n// const axiosInstance = axios.create({\n//   baseURL: \"http://localhost:8081/api/\",\n// });\n\n// // Add request interceptor for attaching token to requests\n// axiosInstance.interceptors.request.use(\n//   (config) => {\n//     const token = JSON.parse(localStorage.getItem(\"login\"));\n//     if (token) {\n//       config.headers.Authorization = `Bearer ${token.token}`;\n//     }\n//     return config;\n//   },\n//   (error) => {\n//     return Promise.reject(error);\n//   }\n// );\n\n// Add response interceptor for handling token expiration\napi.interceptors.response.use(\n  (response) => {\n    console.log(\"RES\", response);\n    return response;\n  },\n  async (error) => {\n    if (error.response && error.response.status === 419) {\n      console.log(\"Token expired, refreshing...\");\n      try {\n        const refreshToken = JSON.parse(\n          localStorage.getItem(\"login\")\n        ).refreshToken;\n        if (!refreshToken) {\n          console.log(\"No refresh token provided.\");\n          throw new Error(\"No refresh token provided.\");\n        } else {\n          console.log(\"refresh token provided.\", refreshToken);\n        }\n        const refreshResponse = await axios.get(\n          `http://localhost:4000/api/users/refreshToken`,\n          {\n            headers: {\n              \"refresh-token\": refreshToken,\n            },\n          }\n        );\n        console.log(\"-----------------resrefresh\", refreshResponse);\n\n        const newtoken = refreshResponse.data.token;\n        console.log(\"hellloooo token\", newtoken);\n        localStorage.setItem(\"token\", newtoken);\n\n        // Retry the original request with the new access token\n        const originalRequest = error.config;\n        originalRequest.headers.Authorization = `Bearer ${newtoken}`;\n        return axiosInstance(originalRequest);\n      } catch (refreshError) {\n        console.error(\"Error refreshing access token:\", refreshError);\n\n        // If the refresh token has expired, dispatch logout action\n        if (\n          refreshError.response.status === 401 &&\n          refreshError.response.data.message === \"Refresh token has expired\"\n        )\n          return Promise.reject(error);\n      }\n    }\n  }\n);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}