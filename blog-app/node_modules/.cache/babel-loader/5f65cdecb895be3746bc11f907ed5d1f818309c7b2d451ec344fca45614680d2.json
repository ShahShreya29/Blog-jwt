{"ast":null,"code":"var _jsxFileName = \"/home/shreya/Documents/react/blog-app/src/BlogReducer.js\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nif (localStorage.getItem(\"blogs\") !== null) {\n  const data = JSON.parse(localStorage.getItem(\"blogs\"));\n  console.log(\"Item does not exist in localstoarge\");\n  var initialState = data;\n} else {\n  console.log(\"Item exists in localstorage\");\n  /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"NO DATA\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 2\n  }, this);\n}\n\n// const initialState = [\n\n// ];\n\nconst blogSlice = createSlice({\n  name: \"blogs\",\n  initialState,\n  reducers: {\n    addBlog: (state, action) => {\n      const newBlog = {\n        id: state.length + 1,\n        ...action.payload\n      };\n      const allBlogs = [...state, newBlog];\n      localStorage.setItem(\"blogs\", JSON.stringify(allBlogs));\n      return allBlogs;\n    },\n    deleteBlog: (state, action) => {\n      const id = action.payload;\n      let blogs = JSON.parse(localStorage.getItem(\"blogs\"));\n      blogs = blogs.filter(blog => blog.id !== +id);\n      localStorage.setItem(\"blogs\", JSON.stringify(blogs));\n      return blogs;\n    },\n    // editBlog: (state, action) => {\n    //   const { id, ...updatedBlogData } = action.payload;\n    //   const blogIndex = state.findIndex((blog) => blog.id === id);\n    //   if (blogIndex !== -1) {\n    //     state[blogIndex] = { ...state[blogIndex], ...updatedBlogData };\n\n    //   }\n    // },\n    editBlog: (state, action) => {\n      const {\n        id,\n        ...updatedBlogData\n      } = action.payload;\n      const blogIndex = state.findIndex(blog => blog.id === id);\n      if (blogIndex !== -1) {\n        state[blogIndex] = {\n          ...state[blogIndex],\n          ...updatedBlogData\n        };\n        localStorage.setItem('blogs', JSON.stringify(state));\n      }\n    }\n  }\n});\nexport const {\n  addBlog,\n  deleteBlog,\n  editBlog\n} = blogSlice.actions;\nexport default blogSlice.reducer;","map":{"version":3,"names":["createSlice","jsxDEV","_jsxDEV","localStorage","getItem","data","JSON","parse","console","log","initialState","children","fileName","_jsxFileName","lineNumber","columnNumber","blogSlice","name","reducers","addBlog","state","action","newBlog","id","length","payload","allBlogs","setItem","stringify","deleteBlog","blogs","filter","blog","editBlog","updatedBlogData","blogIndex","findIndex","actions","reducer"],"sources":["/home/shreya/Documents/react/blog-app/src/BlogReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n\nif(localStorage.getItem(\"blogs\") !== null){\n  const data = JSON.parse(localStorage.getItem(\"blogs\"));\n  console.log(\"Item does not exist in localstoarge\");\nvar  initialState = data;\n\n}else{\n console.log(\"Item exists in localstorage\");\n <p>NO DATA</p>\n}\n\n// const initialState = [\n         \n// ];\n\nconst blogSlice = createSlice({\n  name: \"blogs\",\n  initialState,\n  reducers: {\n    addBlog: (state, action) => {\n      const newBlog = {\n        id: state.length + 1,\n        ...action.payload,\n      };\n      const allBlogs = [...state, newBlog];\n      localStorage.setItem(\"blogs\", JSON.stringify(allBlogs));\n      return allBlogs;\n    },\n    deleteBlog: (state, action) => {\n      const id = action.payload;\n      let blogs = JSON.parse(localStorage.getItem(\"blogs\"));\n      blogs = blogs.filter((blog) => blog.id !== +id);\n      localStorage.setItem(\"blogs\", JSON.stringify(blogs));\n      return blogs;\n    },\n    \n    // editBlog: (state, action) => {\n    //   const { id, ...updatedBlogData } = action.payload;\n    //   const blogIndex = state.findIndex((blog) => blog.id === id);\n    //   if (blogIndex !== -1) {\n    //     state[blogIndex] = { ...state[blogIndex], ...updatedBlogData };\n     \n    //   }\n    // },\n    editBlog: (state, action) => {\n      const { id, ...updatedBlogData } = action.payload;\n      const blogIndex = state.findIndex((blog) => blog.id === id);\n      if (blogIndex !== -1) {\n        state[blogIndex] = { ...state[blogIndex], ...updatedBlogData };\n        localStorage.setItem('blogs', JSON.stringify(state));\n      }\n    },\n    \n    \n  },\n});\n\nexport const { addBlog, deleteBlog, editBlog } = blogSlice.actions;\nexport default blogSlice.reducer;\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/C,IAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI,EAAC;EACxC,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EACtDI,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;EACpD,IAAKC,YAAY,GAAGL,IAAI;AAExB,CAAC,MAAI;EACJG,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;EAC1C,aAAAP,OAAA;IAAAS,QAAA,EAAG;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AACf;;AAEA;;AAEA;;AAEA,MAAMC,SAAS,GAAGhB,WAAW,CAAC;EAC5BiB,IAAI,EAAE,OAAO;EACbP,YAAY;EACZQ,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B,MAAMC,OAAO,GAAG;QACdC,EAAE,EAAEH,KAAK,CAACI,MAAM,GAAG,CAAC;QACpB,GAAGH,MAAM,CAACI;MACZ,CAAC;MACD,MAAMC,QAAQ,GAAG,CAAC,GAAGN,KAAK,EAAEE,OAAO,CAAC;MACpCnB,YAAY,CAACwB,OAAO,CAAC,OAAO,EAAErB,IAAI,CAACsB,SAAS,CAACF,QAAQ,CAAC,CAAC;MACvD,OAAOA,QAAQ;IACjB,CAAC;IACDG,UAAU,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAME,EAAE,GAAGF,MAAM,CAACI,OAAO;MACzB,IAAIK,KAAK,GAAGxB,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;MACrD0B,KAAK,GAAGA,KAAK,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACT,EAAE,KAAK,CAACA,EAAE,CAAC;MAC/CpB,YAAY,CAACwB,OAAO,CAAC,OAAO,EAAErB,IAAI,CAACsB,SAAS,CAACE,KAAK,CAAC,CAAC;MACpD,OAAOA,KAAK;IACd,CAAC;IAED;IACA;IACA;IACA;IACA;;IAEA;IACA;IACAG,QAAQ,EAAEA,CAACb,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAM;QAAEE,EAAE;QAAE,GAAGW;MAAgB,CAAC,GAAGb,MAAM,CAACI,OAAO;MACjD,MAAMU,SAAS,GAAGf,KAAK,CAACgB,SAAS,CAAEJ,IAAI,IAAKA,IAAI,CAACT,EAAE,KAAKA,EAAE,CAAC;MAC3D,IAAIY,SAAS,KAAK,CAAC,CAAC,EAAE;QACpBf,KAAK,CAACe,SAAS,CAAC,GAAG;UAAE,GAAGf,KAAK,CAACe,SAAS,CAAC;UAAE,GAAGD;QAAgB,CAAC;QAC9D/B,YAAY,CAACwB,OAAO,CAAC,OAAO,EAAErB,IAAI,CAACsB,SAAS,CAACR,KAAK,CAAC,CAAC;MACtD;IACF;EAGF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAED,OAAO;EAAEU,UAAU;EAAEI;AAAS,CAAC,GAAGjB,SAAS,CAACqB,OAAO;AAClE,eAAerB,SAAS,CAACsB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}