{"ast":null,"code":"var _jsxFileName = \"/home/shreya/Documents/react/blog-app/src/Components/LoginForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\nimport \"./LoginForm.module.css\";\nimport TextField from \"./TextField\";\nimport AddBtn from \"./AddBtn\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Formik, Form } from \"formik\";\nimport * as yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { logIn } from \"../AuthReducer\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const validate = yup.object({\n    email: yup.string().email(\"invalid email\").required(\"email is required\"),\n    password: yup.string().required(\"Password is Required\").min(6, \"At Least 6 Character\")\n  });\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  // const [values,setValues] = useSta\n\n  const handleLogin = async e => {\n    var user = JSON.parse(localStorage.getItem(\"users\"));\n    user = await user.find(function (user) {\n      if (e.email === user.email && btoa(e.password) === user.password) {\n        alert(\"login SuccessFully \" + user.name);\n        if (user.role === \"user\") {\n          navigate(\"/Blogs\");\n        } else {\n          navigate(\"/BlogList\");\n        }\n        sessionStorage.setItem(\"name\", user.name);\n        sessionStorage.setItem(\"user\", JSON.stringify({\n          userEmail: e.email\n        }));\n        dispatch(logIn({\n          userEmail: e.email\n        }));\n      } else {\n        alert(\"invalid username or password\");\n      }\n    });\n\n    // function (user) {\n    // if (e.email === user.email && btoa(e.password) === user.password) {\n    //   alert(\"login SuccessFully \" + user.name);\n    //   if (user.role === \"user\") {\n    //     navigate(\"/Blogs\");\n    //   } else {\n    //     navigate(\"/BlogList\");\n    //   }\n\n    //   sessionStorage.setItem(\"name\", user.name);\n    //   sessionStorage.setItem(\"user\", JSON.stringify({ userEmail: e.email }));\n    //   dispatch(logIn({ userEmail: e.email }));\n    // } else {\n    //   alert(\"invalid username or password\");\n    // }\n    // });\n  };\n\n  // const handleLogin = (e) => {\n  //   // e.preventDefault();\n\n  //   const formData = {\n  //     email: e.email,\n  //     password: e.password,\n  //   };\n\n  //   const errors = validate.validate(formData);\n\n  //   if (errors.length > 0) {\n  //     alert(errors.join(\"\\n\"));\n  //   } else {\n  //     var users = JSON.parse(localStorage.getItem(\"users\")) || [];\n  //     sessionStorage.setItem(\"ce\", e.email);\n\n  //     //  Find the user with the matching email\n  //     var user = users.find(function (user) {\n  //       return user.email === e.email;\n  //     });\n\n  //     if (user) {\n  //       // Check if passwords match\n  //       if (user.password === btoa(e.password)) {\n  //         alert(\"Login successful for \" + user.name + \"!\");\n  //         sessionStorage.setItem('name',user.name)\n  //         if (user.role === \"user\") {\n  //           navigate(\"/Blogs\");\n  //         } else {\n  //           navigate(\"/BlogList\");\n  //         }\n  //       }else{\n  //         alert('invalid login')\n  //       }\n  //     }else{\n  //       alert('Please Signup first')\n  //     }\n  //   }\n\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      validationSchema: validate,\n      onSubmit: handleLogin,\n      children: Formik => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container m-5\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group col-md-4 col-md-offset-5 align-center \",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"m-5 text-center\",\n                children: \"Login \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Email: \",\n                type: \"email\",\n                name: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Password: \",\n                type: \"password\",\n                name: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(AddBtn, {\n                  style: {\n                    marginLeft: \"130px\",\n                    marginTop: \"10px\",\n                    backgroundColor: \"#1070ef\",\n                    color: \"white\",\n                    width: \"99px\"\n                  },\n                  children: [\" \", \"LogIn\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"text-center m-3\",\n                children: [\"PLEASE \", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/Blog-react-redux/\",\n                  children: \"SIGNUP!!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 28\n                }, this), \" FIRST\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(LoginForm, \"ZaVe+Vo7W9FMoQ/aTgBrV7UvA04=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["TextField","AddBtn","Link","useNavigate","Formik","Form","yup","useDispatch","logIn","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginForm","_s","validate","object","email","string","required","password","min","navigate","dispatch","handleLogin","e","user","JSON","parse","localStorage","getItem","find","btoa","alert","name","role","sessionStorage","setItem","stringify","userEmail","children","initialValues","validationSchema","onSubmit","className","fileName","_jsxFileName","lineNumber","columnNumber","label","type","style","marginLeft","marginTop","backgroundColor","color","width","to","_c","$RefreshReg$"],"sources":["/home/shreya/Documents/react/blog-app/src/Components/LoginForm.js"],"sourcesContent":["// import React, { useState } from \"react\";\nimport \"./LoginForm.module.css\";\nimport TextField from \"./TextField\";\nimport AddBtn from \"./AddBtn\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Formik, Form } from \"formik\";\nimport * as yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { logIn } from \"../AuthReducer\";\n\nconst LoginForm = () => {\n  const validate = yup.object({\n    email: yup.string().email(\"invalid email\").required(\"email is required\"),\n    password: yup\n      .string()\n      .required(\"Password is Required\")\n      .min(6, \"At Least 6 Character\"),\n  });\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  // const [values,setValues] = useSta\n\n  const handleLogin = async(e) => {\n    var user = JSON.parse(localStorage.getItem(\"users\"));\n    user = await user.find(function(user){\n      if (e.email === user.email && btoa(e.password) === user.password) {\n          alert(\"login SuccessFully \" + user.name);\n          if (user.role === \"user\") {\n            navigate(\"/Blogs\");\n          } else {\n            navigate(\"/BlogList\");\n          }\n  \n          sessionStorage.setItem(\"name\", user.name);\n          sessionStorage.setItem(\"user\", JSON.stringify({ userEmail: e.email }));\n          dispatch(logIn({ userEmail: e.email }));\n      } else {\n          alert(\"invalid username or password\");\n      }\n    \n    });\n\n      // function (user) {\n      // if (e.email === user.email && btoa(e.password) === user.password) {\n      //   alert(\"login SuccessFully \" + user.name);\n      //   if (user.role === \"user\") {\n      //     navigate(\"/Blogs\");\n      //   } else {\n      //     navigate(\"/BlogList\");\n      //   }\n\n      //   sessionStorage.setItem(\"name\", user.name);\n      //   sessionStorage.setItem(\"user\", JSON.stringify({ userEmail: e.email }));\n      //   dispatch(logIn({ userEmail: e.email }));\n      // } else {\n      //   alert(\"invalid username or password\");\n      // }\n    // });\n  };\n\n  // const handleLogin = (e) => {\n  //   // e.preventDefault();\n\n  //   const formData = {\n  //     email: e.email,\n  //     password: e.password,\n  //   };\n\n  //   const errors = validate.validate(formData);\n\n  //   if (errors.length > 0) {\n  //     alert(errors.join(\"\\n\"));\n  //   } else {\n  //     var users = JSON.parse(localStorage.getItem(\"users\")) || [];\n  //     sessionStorage.setItem(\"ce\", e.email);\n\n  //     //  Find the user with the matching email\n  //     var user = users.find(function (user) {\n  //       return user.email === e.email;\n  //     });\n\n  //     if (user) {\n  //       // Check if passwords match\n  //       if (user.password === btoa(e.password)) {\n  //         alert(\"Login successful for \" + user.name + \"!\");\n  //         sessionStorage.setItem('name',user.name)\n  //         if (user.role === \"user\") {\n  //           navigate(\"/Blogs\");\n  //         } else {\n  //           navigate(\"/BlogList\");\n  //         }\n  //       }else{\n  //         alert('invalid login')\n  //       }\n  //     }else{\n  //       alert('Please Signup first')\n  //     }\n  //   }\n\n  // };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          email: \"\",\n          password: \"\",\n        }}\n        validationSchema={validate}\n        onSubmit={handleLogin}\n      >\n        {(Formik) => (\n          <div className=\"container m-5\">\n            <Form>\n              <div className=\"row justify-content-center\">\n                <div className=\"form-group col-md-4 col-md-offset-5 align-center \">\n                  <h1 className=\"m-5 text-center\">Login </h1>\n                  <TextField label=\"Email: \" type=\"email\" name=\"email\" />\n                  <TextField\n                    label=\"Password: \"\n                    type=\"password\"\n                    name=\"password\"\n                  />\n                  <div>\n                    <AddBtn\n                      style={{\n                        marginLeft: \"130px\",\n                        marginTop: \"10px\",\n                        backgroundColor: \"#1070ef\",\n                        color: \"white\",\n                        width: \"99px\",\n                      }}\n                    >\n                      {\" \"}\n                      LogIn\n                    </AddBtn>\n                  </div>\n                  <h6 className=\"text-center m-3\">\n                    PLEASE <Link to=\"/Blog-react-redux/\">SIGNUP!!</Link> FIRST\n                  </h6>\n                </div>\n              </div>\n            </Form>\n          </div>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}