{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";let data=JSON.parse(localStorage.getItem(\"blogs\"));if(localStorage.getItem(\"blogs\")!==null){console.log(\"Item does not exist in localStorage \");var initialState=data;}else{console.log(\"Item exists in localStorage\");}const blogSlice=createSlice({name:\"blogs\",initialState,reducers:{addBlog:function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;const newBlog={id:state.length+1,...action.payload};const allBlogs=[...state,newBlog];localStorage.setItem(\"blogs\",JSON.stringify(allBlogs));return allBlogs;},deleteBlog:(state,action)=>{const id=action.payload;let blogs=JSON.parse(localStorage.getItem(\"blogs\"));blogs=blogs.filter(blog=>blog.id!==+id);localStorage.setItem(\"blogs\",JSON.stringify(blogs));return blogs;},// editBlog: (state, action) => {\n//   const { id, ...updatedBlogData } = action.payload;\n//   const blogIndex = state.findIndex((blog) => blog.id === id);\n//   if (blogIndex !== -1) {\n//     state[blogIndex] = { ...state[blogIndex], ...updatedBlogData };\n//   }\n// },\neditBlog:(state,action)=>{const{id,...updatedBlogData}=action.payload;const blogIndex=state.findIndex(blog=>blog.id===id);if(blogIndex!==-1){state[blogIndex]={...state[blogIndex],...updatedBlogData};localStorage.setItem(\"blogs\",JSON.stringify(state));}}}});export const{addBlog,deleteBlog,editBlog}=blogSlice.actions;export default blogSlice.reducer;","map":{"version":3,"names":["createSlice","data","JSON","parse","localStorage","getItem","console","log","initialState","blogSlice","name","reducers","addBlog","state","arguments","length","undefined","action","newBlog","id","payload","allBlogs","setItem","stringify","deleteBlog","blogs","filter","blog","editBlog","updatedBlogData","blogIndex","findIndex","actions","reducer"],"sources":["/home/shreya/Documents/react/blog-app/src/BlogReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nlet data = JSON.parse(localStorage.getItem(\"blogs\"));\nif (localStorage.getItem(\"blogs\") !== null) {\n  console.log(\"Item does not exist in localStorage \");\n  var initialState = data;\n} else {\n  console.log(\"Item exists in localStorage\");\n}\n\n\nconst blogSlice = createSlice({\n  name: \"blogs\",\n  initialState,\n  reducers: {\n    addBlog: (state = initialState, action) => {\n      const newBlog = {\n        id: state.length + 1,\n        ...action.payload,\n      };\n      const allBlogs = [...state, newBlog];\n      localStorage.setItem(\"blogs\", JSON.stringify(allBlogs));\n      return allBlogs;\n    },\n    deleteBlog: (state, action) => {\n      const id = action.payload;\n      let blogs = JSON.parse(localStorage.getItem(\"blogs\"));\n      blogs = blogs.filter((blog) => blog.id !== +id);\n      localStorage.setItem(\"blogs\", JSON.stringify(blogs));\n      return blogs;\n    },\n\n    // editBlog: (state, action) => {\n    //   const { id, ...updatedBlogData } = action.payload;\n    //   const blogIndex = state.findIndex((blog) => blog.id === id);\n    //   if (blogIndex !== -1) {\n    //     state[blogIndex] = { ...state[blogIndex], ...updatedBlogData };\n\n    //   }\n    // },\n    editBlog: (state, action) => {\n      const { id, ...updatedBlogData } = action.payload;\n      const blogIndex = state.findIndex((blog) => blog.id === id);\n      if (blogIndex !== -1) {\n        state[blogIndex] = { ...state[blogIndex], ...updatedBlogData };\n        localStorage.setItem(\"blogs\", JSON.stringify(state));\n      }\n    },\n  },\n});\n\nexport const { addBlog, deleteBlog, editBlog } = blogSlice.actions;\nexport default blogSlice.reducer;\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,GAAI,CAAAC,IAAI,CAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CACpD,GAAID,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,GAAK,IAAI,CAAE,CAC1CC,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC,CACnD,GAAI,CAAAC,YAAY,CAAGP,IAAI,CACzB,CAAC,IAAM,CACLK,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC,CAC5C,CAGA,KAAM,CAAAE,SAAS,CAAGT,WAAW,CAAC,CAC5BU,IAAI,CAAE,OAAO,CACbF,YAAY,CACZG,QAAQ,CAAE,CACRC,OAAO,CAAE,QAAAA,CAAA,CAAkC,IAAjC,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGN,YAAY,IAAE,CAAAS,MAAM,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CACpC,KAAM,CAAAE,OAAO,CAAG,CACdC,EAAE,CAAEN,KAAK,CAACE,MAAM,CAAG,CAAC,CACpB,GAAGE,MAAM,CAACG,OACZ,CAAC,CACD,KAAM,CAAAC,QAAQ,CAAG,CAAC,GAAGR,KAAK,CAAEK,OAAO,CAAC,CACpCd,YAAY,CAACkB,OAAO,CAAC,OAAO,CAAEpB,IAAI,CAACqB,SAAS,CAACF,QAAQ,CAAC,CAAC,CACvD,MAAO,CAAAA,QAAQ,CACjB,CAAC,CACDG,UAAU,CAAEA,CAACX,KAAK,CAAEI,MAAM,GAAK,CAC7B,KAAM,CAAAE,EAAE,CAAGF,MAAM,CAACG,OAAO,CACzB,GAAI,CAAAK,KAAK,CAAGvB,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CACrDoB,KAAK,CAAGA,KAAK,CAACC,MAAM,CAAEC,IAAI,EAAKA,IAAI,CAACR,EAAE,GAAK,CAACA,EAAE,CAAC,CAC/Cf,YAAY,CAACkB,OAAO,CAAC,OAAO,CAAEpB,IAAI,CAACqB,SAAS,CAACE,KAAK,CAAC,CAAC,CACpD,MAAO,CAAAA,KAAK,CACd,CAAC,CAED;AACA;AACA;AACA;AACA;AAEA;AACA;AACAG,QAAQ,CAAEA,CAACf,KAAK,CAAEI,MAAM,GAAK,CAC3B,KAAM,CAAEE,EAAE,CAAE,GAAGU,eAAgB,CAAC,CAAGZ,MAAM,CAACG,OAAO,CACjD,KAAM,CAAAU,SAAS,CAAGjB,KAAK,CAACkB,SAAS,CAAEJ,IAAI,EAAKA,IAAI,CAACR,EAAE,GAAKA,EAAE,CAAC,CAC3D,GAAIW,SAAS,GAAK,CAAC,CAAC,CAAE,CACpBjB,KAAK,CAACiB,SAAS,CAAC,CAAG,CAAE,GAAGjB,KAAK,CAACiB,SAAS,CAAC,CAAE,GAAGD,eAAgB,CAAC,CAC9DzB,YAAY,CAACkB,OAAO,CAAC,OAAO,CAAEpB,IAAI,CAACqB,SAAS,CAACV,KAAK,CAAC,CAAC,CACtD,CACF,CACF,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAED,OAAO,CAAEY,UAAU,CAAEI,QAAS,CAAC,CAAGnB,SAAS,CAACuB,OAAO,CAClE,cAAe,CAAAvB,SAAS,CAACwB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}