{"ast":null,"code":"var _jsxFileName = \"/home/shreya/Documents/react/blog-app/src/Components/LoginForm.js\";\n// import React, { useState } from \"react\";\nimport \"./LoginForm.module.css\";\nimport TextField from \"./TextField\";\nimport AddBtn from \"./AddBtn\";\n// import { useNavigate } from \"react-router-dom\";\nimport { Formik, Form } from \"formik\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  const validate = yup.object({\n    email: yup.string().email(\"invalid email\").required(\"email is required\"),\n    password: yup.string().required(\"Password is Required\").min(6, \"At Least 6 Character\")\n    //confirmPassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match'),\n  });\n  // const navigate = useNavigate()\n  // const [values,setValues] = useState()\n\n  const formData = {\n    email: e.target.email.value,\n    password: e.target.password.value\n  };\n  const handleLogin = e => {\n    // e.preventDefault();\n    // if (!values.email || !values.password) {\n    //   alert(\"Please fill in all fields\");\n    //   return;\n    // }\n\n    // const initialValues = {\n    //   name: \"\",\n    //   email: \"\",\n\n    // };\n\n    console.log(formData);\n    const errors = validate.validate(formData);\n    if (errors.length > 0) {\n      alert(errors.join(\"\\n\"));\n      alert(\"please fill proper Form\");\n    } else {\n      alert(\"login successfully\");\n    }\n    // var users = JSON.parse(localStorage.getItem('users')) || [];\n    // sessionStorage.setItem('ce', values.email)\n\n    // Find the user with the matching email\n    // var user = users.find(function (user) {\n    //   return user.email === values.email;\n\n    // });\n\n    // if (user) {\n    //   // Check if passwords match\n    //   if (user.password === btoa(values.password)) {\n    //     alert('Login successful for ' + user.name + '!');\n    //     if(user.role === 'user'){\n\n    //       navigate('/Blogs')\n    //     }else{\n    //       navigate('/BlogList')\n    //     }\n    //   }\n    // }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      validationSchema: validate,\n      children: Formik => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container m-5\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group col-md-4 col-md-offset-5 align-center \",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"m-5 text-center\",\n                children: \"Login \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Email: \",\n                type: \"email\",\n                name: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Password: \",\n                type: \"password\",\n                name: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(AddBtn, {\n                  style: {\n                    marginLeft: \"64px\",\n                    marginTop: \"20px\",\n                    backgroundColor: \"#1070ef\",\n                    color: \"white\",\n                    width: \"99px\"\n                  },\n                  onClick: handleLogin,\n                  children: [\" \", \"LogIn\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["TextField","AddBtn","Formik","Form","yup","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginForm","validate","object","email","string","required","password","min","formData","e","target","value","handleLogin","console","log","errors","length","alert","join","children","initialValues","validationSchema","className","fileName","_jsxFileName","lineNumber","columnNumber","label","type","name","style","marginLeft","marginTop","backgroundColor","color","width","onClick","_c","$RefreshReg$"],"sources":["/home/shreya/Documents/react/blog-app/src/Components/LoginForm.js"],"sourcesContent":["// import React, { useState } from \"react\";\nimport \"./LoginForm.module.css\";\nimport TextField from \"./TextField\";\nimport AddBtn from \"./AddBtn\";\n// import { useNavigate } from \"react-router-dom\";\nimport { Formik, Form } from \"formik\";\nimport * as yup from \"yup\";\n\nconst LoginForm = () => {\n  const validate = yup.object({\n    email: yup.string().email(\"invalid email\").required(\"email is required\"),\n    password: yup\n      .string()\n      .required(\"Password is Required\")\n      .min(6, \"At Least 6 Character\"),\n    //confirmPassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match'),\n  });\n  // const navigate = useNavigate()\n  // const [values,setValues] = useState()\n\n\n  const formData = {\n    email: e.target.email.value,\n    password: e.target.password.value,\n  };\n  const handleLogin = (e) => {\n    // e.preventDefault();\n    // if (!values.email || !values.password) {\n    //   alert(\"Please fill in all fields\");\n    //   return;\n    // }\n\n\n  // const initialValues = {\n  //   name: \"\",\n  //   email: \"\",\n   \n  // };\n\n    console.log(formData);\n    const errors = validate.validate(formData);\n    if (errors.length > 0) {\n      alert(errors.join(\"\\n\"));\n      alert(\"please fill proper Form\");\n    } else {\n      alert(\"login successfully\");\n    }\n    // var users = JSON.parse(localStorage.getItem('users')) || [];\n    // sessionStorage.setItem('ce', values.email)\n\n    // Find the user with the matching email\n    // var user = users.find(function (user) {\n    //   return user.email === values.email;\n\n    // });\n\n    // if (user) {\n    //   // Check if passwords match\n    //   if (user.password === btoa(values.password)) {\n    //     alert('Login successful for ' + user.name + '!');\n    //     if(user.role === 'user'){\n\n    //       navigate('/Blogs')\n    //     }else{\n    //       navigate('/BlogList')\n    //     }\n    //   }\n    // }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          email: \"\",\n          password: \"\",\n        }}\n        validationSchema={validate}\n      >\n        {(Formik) => (\n          <div className=\"container m-5\">\n            <Form>\n              <div className=\"row justify-content-center\">\n                <div className=\"form-group col-md-4 col-md-offset-5 align-center \">\n                  <h1 className=\"m-5 text-center\">Login </h1>\n                  <TextField label=\"Email: \" type=\"email\" name=\"email\" />\n                  <TextField\n                    label=\"Password: \"\n                    type=\"password\"\n                    name=\"password\"\n                  />\n                  <div>\n                    <AddBtn\n                      style={{\n                        marginLeft: \"64px\",\n                        marginTop: \"20px\",\n                        backgroundColor: \"#1070ef\",\n                        color: \"white\",\n                        width: \"99px\",\n                      }}\n                      onClick={handleLogin}\n                    >\n                      {\" \"}\n                      LogIn\n                    </AddBtn>\n                  </div>\n                </div>\n              </div>\n            </Form>\n          </div>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}