{"ast":null,"code":"var _jsxFileName = \"/home/shreya/Documents/react/blog-app/src/Components/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./LoginForm.module.css\";\nimport TextField from \"./TextField\";\nimport AddBtn from \"./AddBtn\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Formik, Form } from \"formik\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const validate = yup.object({\n    name: yup.string().required(\"Name Is Required\").max(10, \"Must be 10 or less letters \"),\n    email: yup.string().email(\"invalid email\").required(\"email is required\"),\n    password: yup.string().required(\"Password is Required\").min(6, \"At Least 6 Character\")\n    //confirmPassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match'),\n  });\n  const navigate = useNavigate();\n  const handleLogin = e => {\n    e.preventDefault();\n    // if (!values.email || !values.password) {\n    //   alert(\"Please fill in all fields\");\n    //   return;\n    // }\n    // var users = JSON.parse(localStorage.getItem('users')) || [];\n    // sessionStorage.setItem('ce', values.email)\n\n    // // Find the user with the matching email\n    // var user = users.find(function (user) {\n    //   return user.email === values.email;\n\n    // });\n\n    if (user) {\n      // Check if passwords match\n      if (user.password === btoa(values.password)) {\n        alert('Login successful for ' + user.name + '!');\n        if (user.role === 'user') {\n          navigate('/Blogs');\n        } else {\n          navigate('/BlogList');\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        role: \"\"\n      },\n      validationSchema: validate,\n      children: Formik => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container m-5\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group col-md-4 col-md-offset-5 align-center \",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"m-5 text-center\",\n                children: \"SignUp \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Name: \",\n                type: \"text\",\n                name: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Email: \",\n                type: \"email\",\n                name: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Password: \",\n                type: \"password\",\n                name: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(SelectField, {\n                  label: options.label,\n                  options: options,\n                  value: values.role,\n                  onChange: e => setValues({\n                    ...values,\n                    role: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(AddBtn, {\n                  style: {\n                    marginLeft: \"64px\",\n                    marginTop: \"20px\",\n                    backgroundColor: \"#1070ef\",\n                    color: \"white\",\n                    width: \"99px\"\n                  },\n                  onClick: handleSignup,\n                  children: [\" \", \"SignUP\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 2\n    }, this)\n  }, void 0, false);\n};\n_s(LoginForm, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","TextField","AddBtn","useNavigate","Formik","Form","yup","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginForm","_s","validate","object","name","string","required","max","email","password","min","navigate","handleLogin","e","preventDefault","user","btoa","values","alert","role","children","initialValues","validationSchema","className","fileName","_jsxFileName","lineNumber","columnNumber","label","type","SelectField","options","value","onChange","setValues","target","style","marginLeft","marginTop","backgroundColor","color","width","onClick","handleSignup","_c","$RefreshReg$"],"sources":["/home/shreya/Documents/react/blog-app/src/Components/LoginForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./LoginForm.module.css\";\nimport TextField from \"./TextField\";\nimport AddBtn from \"./AddBtn\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Formik, Form } from \"formik\";\nimport * as yup from \"yup\";\n\n\n  \nconst LoginForm = () => {\n  const validate = yup.object({\n    name: yup\n      .string()\n      .required(\"Name Is Required\")\n      .max(10, \"Must be 10 or less letters \"),\n    email: yup.string().email(\"invalid email\").required(\"email is required\"),\n    password: yup\n      .string()\n      .required(\"Password is Required\")\n      .min(6, \"At Least 6 Character\"),\n    //confirmPassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match'),\n  });\n  const navigate = useNavigate()\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    // if (!values.email || !values.password) {\n    //   alert(\"Please fill in all fields\");\n    //   return;\n    // }\n    // var users = JSON.parse(localStorage.getItem('users')) || [];\n    // sessionStorage.setItem('ce', values.email)\n\n\n    // // Find the user with the matching email\n    // var user = users.find(function (user) {\n    //   return user.email === values.email;\n\n    // });\n\n    if (user) {\n      // Check if passwords match\n      if (user.password === btoa(values.password)) {\n        alert('Login successful for ' + user.name + '!');\n        if(user.role === 'user'){\n        \n          navigate('/Blogs')\n        }else{\n          navigate('/BlogList')\n        }\n      }\n    }\n  };\n\n\n\n  return (\n    <>\n <Formik\n        initialValues={{\n          name: \"\",\n          email: \"\",\n          password: \"\",\n          role: \"\",\n        }}\n        validationSchema={validate}\n      >\n        {(Formik) => (\n          <div className=\"container m-5\">\n            <Form>\n              <div className=\"row justify-content-center\">\n                <div className=\"form-group col-md-4 col-md-offset-5 align-center \">\n                  <h1 className=\"m-5 text-center\">SignUp </h1>\n                  <TextField label=\"Name: \" type=\"text\" name=\"name\" />\n                  <TextField label=\"Email: \" type=\"email\" name=\"email\" />\n                  <TextField\n                    label=\"Password: \"\n                    type=\"password\"\n                    name=\"password\"\n                  />\n\n                  <div className=\"mb-3\">\n                    <SelectField\n                      label={options.label}\n                      options={options}\n                      value={values.role}\n                      onChange={(e) =>\n                        setValues({ ...values, role: e.target.value })\n                      }\n                    />\n                  </div>\n                  <div>\n                    <AddBtn\n                      style={{\n                        marginLeft: \"64px\",\n                        marginTop: \"20px\",\n                        backgroundColor: \"#1070ef\",\n                        color: \"white\",\n                        width: \"99px\",\n                      }}\n                      onClick={handleSignup}\n                    >\n                      {\" \"}\n                      SignUP\n                    </AddBtn>\n                  </div>\n                </div>\n              </div>\n            </Form>\n          </div>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}