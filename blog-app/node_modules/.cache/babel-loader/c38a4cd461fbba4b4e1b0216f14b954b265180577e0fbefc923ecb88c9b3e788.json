{"ast":null,"code":"// import TextField from \"./TextField\";\n// import AddBtn from \"./AddBtn\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import { Formik, Form } from \"formik\";\n// import * as yup from \"yup\";\n// import { useState } from \"react\";\n// import axios from \"axios\";\n\n// const LoginForm = () => {\n//   const validate = yup.object({\n//     email: yup.string().email(\"invalid email\").required(\"email is required\"),\n//     password: yup\n//       .string()\n//       .required(\"Password is Required\")\n//       .min(6, \"At Least 6 Character\"),\n//   });\n//   const navigate = useNavigate();\n\n//   const [userData, setUserData] = useState({\n//     email: \"\",\n//     password: \"\",\n//   });\n\n//   const handleLogin = async (values) => {\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:8081/api/login\",\n//         values\n//       );\n//       console.log(\"res\", response.data);\n//       localStorage.setItem(\n//         \"login\",\n//         JSON.stringify({\n//           login: true,\n//           name:response.data.existingUser.name,\n//        token: response.data.accessToken,\n//          refreshToken:response.data.refreshToken\n//         })\n//       );\n//       console.log(\"resTOKEN\",response.data.refreshToken);\n//       sessionStorage.setItem(\"refreshToken\",response.data.refreshToken)\n//       let rt = sessionStorage.getItem(\"refreshToken\")\n//       console.log(rt);\n\n//       alert(\"Login Successfully Done \" + \" \" + response.data.existingUser.name);\n//       setUserData({\n//         email: \"\",\n//         password: \"\",\n//       });\n\n//       if (response.data.existingUser.role === \"admin\") {\n//         navigate(\"/BlogList\");\n//       } else {\n//         navigate(\"/Blogs\");\n//       }\n//     } catch (error) {\n//       alert(\"User not found\");\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <>\n//       <Formik\n//         initialValues={{\n//           email: \"\",\n//           password: \"\",\n//         }}\n//         validationSchema={validate}\n//         onSubmit={handleLogin}\n//       >\n//         {(Formik) => (\n//           <div className=\"container m-5\">\n//             <Form>\n//               <div className=\"row justify-content-center\">\n//                 <div className=\"form-group col-md-4 col-md-offset-5 align-center \">\n//                   <h1 className=\"m-5 text-center\">Login </h1>\n//                   <TextField label=\"Email: \" type=\"email\" name=\"email\" />\n//                   <TextField\n//                     label=\"Password: \"\n//                     type=\"password\"\n//                     name=\"password\"\n//                   />\n//                   <div>\n//                     <AddBtn\n//                       style={{\n//                         marginLeft: \"130px\",\n//                         marginTop: \"10px\",\n//                         backgroundColor: \"#1070ef\",\n//                         color: \"white\",\n//                         width: \"99px\",\n//                       }}\n//                     >\n//                       LogIn\n//                     </AddBtn>\n//                   </div>\n\n//                 </div>\n//                 <h6 className=\"text-center m-3\">\n//                     PLEASE <Link to=\"/\">SIGNUP!!</Link> FIRST\n//                   </h6>\n//               </div>\n//             </Form>\n//           </div>\n//         )}\n//       </Formik>\n//     </>\n//   );\n// };\n\n// export default LoginForm;\n\n// // eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MzFkNjdlYmFlYzdmZDliNjY2ZmE3NyIsImlhdCI6MTcxNTMzNDE5NSwiZXhwIjoxNzE1MzM3Nzk1fQ.DPHTya_nSIRehNwkojrIYCO50hNDp3A10RzP0EVgpDU\n// // eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MzFkNjdlYmFlYzdmZDliNjY2ZmE3NyIsImlhdCI6MTcxNTMzNDE5NSwiZXhwIjoxNzE1MzM0MjU1fQ.Slahq73Hxn4h7MsavGp-Bp5U0RGHZ76_winxn4uIceg\"","map":{"version":3,"names":[],"sources":["/home/shreya/Documents/jwt/blog-app/src/Components/LoginForm.js"],"sourcesContent":["// import TextField from \"./TextField\";\n// import AddBtn from \"./AddBtn\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import { Formik, Form } from \"formik\";\n// import * as yup from \"yup\";\n// import { useState } from \"react\";\n// import axios from \"axios\";\n\n// const LoginForm = () => {\n//   const validate = yup.object({\n//     email: yup.string().email(\"invalid email\").required(\"email is required\"),\n//     password: yup\n//       .string()\n//       .required(\"Password is Required\")\n//       .min(6, \"At Least 6 Character\"),\n//   });\n//   const navigate = useNavigate();\n\n//   const [userData, setUserData] = useState({\n//     email: \"\",\n//     password: \"\",\n//   });\n\n//   const handleLogin = async (values) => {\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:8081/api/login\",\n//         values\n//       );\n//       console.log(\"res\", response.data);\n//       localStorage.setItem(\n//         \"login\",\n//         JSON.stringify({\n//           login: true,\n//           name:response.data.existingUser.name,\n//        token: response.data.accessToken,\n//          refreshToken:response.data.refreshToken\n//         })\n//       );\n//       console.log(\"resTOKEN\",response.data.refreshToken);\n//       sessionStorage.setItem(\"refreshToken\",response.data.refreshToken)\n//       let rt = sessionStorage.getItem(\"refreshToken\")\n//       console.log(rt);\n\n//       alert(\"Login Successfully Done \" + \" \" + response.data.existingUser.name);\n//       setUserData({\n//         email: \"\",\n//         password: \"\",\n//       });\n\n//       if (response.data.existingUser.role === \"admin\") {\n//         navigate(\"/BlogList\");\n//       } else {\n//         navigate(\"/Blogs\");\n//       }\n//     } catch (error) {\n//       alert(\"User not found\");\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <>\n//       <Formik\n//         initialValues={{\n//           email: \"\",\n//           password: \"\",\n//         }}\n//         validationSchema={validate}\n//         onSubmit={handleLogin}\n//       >\n//         {(Formik) => (\n//           <div className=\"container m-5\">\n//             <Form>\n//               <div className=\"row justify-content-center\">\n//                 <div className=\"form-group col-md-4 col-md-offset-5 align-center \">\n//                   <h1 className=\"m-5 text-center\">Login </h1>\n//                   <TextField label=\"Email: \" type=\"email\" name=\"email\" />\n//                   <TextField\n//                     label=\"Password: \"\n//                     type=\"password\"\n//                     name=\"password\"\n//                   />\n//                   <div>\n//                     <AddBtn\n//                       style={{\n//                         marginLeft: \"130px\",\n//                         marginTop: \"10px\",\n//                         backgroundColor: \"#1070ef\",\n//                         color: \"white\",\n//                         width: \"99px\",\n//                       }}\n//                     >\n//                       LogIn\n//                     </AddBtn>\n//                   </div>\n                \n//                 </div>\n//                 <h6 className=\"text-center m-3\">\n//                     PLEASE <Link to=\"/\">SIGNUP!!</Link> FIRST\n//                   </h6>\n//               </div>\n//             </Form>\n//           </div>\n//         )}\n//       </Formik>\n//     </>\n//   );\n// };\n\n// export default LoginForm;\n\n\n\n\n\n// // eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MzFkNjdlYmFlYzdmZDliNjY2ZmE3NyIsImlhdCI6MTcxNTMzNDE5NSwiZXhwIjoxNzE1MzM3Nzk1fQ.DPHTya_nSIRehNwkojrIYCO50hNDp3A10RzP0EVgpDU\n// // eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MzFkNjdlYmFlYzdmZDliNjY2ZmE3NyIsImlhdCI6MTcxNTMzNDE5NSwiZXhwIjoxNzE1MzM0MjU1fQ.Slahq73Hxn4h7MsavGp-Bp5U0RGHZ76_winxn4uIceg\"\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}