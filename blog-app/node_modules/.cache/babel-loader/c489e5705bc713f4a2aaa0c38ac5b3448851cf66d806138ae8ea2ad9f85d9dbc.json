{"ast":null,"code":"var _jsxFileName = \"/home/shreya/Documents/react/blog-app/src/Components/SignupForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TextField from \"./TextField\";\nimport AddBtn from \"./AddBtn\";\nimport { useNavigate } from \"react-router-dom\";\nimport SelectField from \"./SelectField\";\n// import { signUP } from \"../AuthReducer\";\n// import { useDispatch } from \"react-redux\";\nimport { Formik, Form } from \"formik\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignupForm = () => {\n  _s();\n  const validate = yup.object({\n    name: yup.string().required(\"Name Is Required\").max(10, \"Must be 10 or less letters \"),\n    email: yup.string().email(\"invalid email\").required(\"email is required\"),\n    password: yup.string().required(\"Password is Required\").min(6, \"At Least 6 Character\")\n    // role: yup\n    // .string()\n    // .required(\"Role is Required\")\n\n    //confirmPassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match'),\n  });\n  const navigate = useNavigate();\n  const [values, setValues] = useState();\n  //const [role,setRole] = useState()\n\n  const options = [{\n    value: \"user\",\n    label: \"User\"\n  }, {\n    value: \"admin\",\n    label: \"Admin\"\n  }];\n  const handleSignup = e => {\n    e.preventDefault();\n    navigate(\"/LoginForm\");\n    var users = JSON.parse(localStorage.getItem(\"users\")) || [];\n    // users.push({\n    //   name: values.name,\n    //   email: values.email,\n    //   password: btoa(values.password),\n    //   role: values.role,\n    // });\n\n    // Store the updated array back into localStorage\n    localStorage.setItem(\"users\", JSON.stringify(users));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        role: \"\"\n      },\n      validationSchema: validate,\n      children: Formik => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container m-5\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group col-md-4 col-md-offset-5 align-center \",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"m-5 text-center\",\n                children: \"SignUp \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Name: \",\n                type: \"text\",\n                name: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Email: \",\n                type: \"email\",\n                name: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Password: \",\n                type: \"password\",\n                name: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(SelectField, {\n                  label: options.label,\n                  options: options,\n                  value: values.options,\n                  onChange: e => setValues({\n                    ...values,\n                    options: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(AddBtn, {\n                  style: {\n                    marginLeft: \"64px\",\n                    marginTop: \"20px\",\n                    backgroundColor: \"#1070ef\",\n                    color: \"white\",\n                    width: \"99px\"\n                  },\n                  onClick: handleSignup,\n                  children: [\" \", \"SignUP\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(SignupForm, \"bWcf9m/xpRjwLPftNI77K6VbMX0=\", false, function () {\n  return [useNavigate];\n});\n_c = SignupForm;\nexport default SignupForm;\nvar _c;\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"names":["React","useState","TextField","AddBtn","useNavigate","SelectField","Formik","Form","yup","jsxDEV","_jsxDEV","Fragment","_Fragment","SignupForm","_s","validate","object","name","string","required","max","email","password","min","navigate","values","setValues","options","value","label","handleSignup","e","preventDefault","users","JSON","parse","localStorage","getItem","setItem","stringify","children","initialValues","role","validationSchema","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","style","marginLeft","marginTop","backgroundColor","color","width","onClick","_c","$RefreshReg$"],"sources":["/home/shreya/Documents/react/blog-app/src/Components/SignupForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport TextField from \"./TextField\";\nimport AddBtn from \"./AddBtn\";\nimport { useNavigate } from \"react-router-dom\";\nimport SelectField from \"./SelectField\";\n// import { signUP } from \"../AuthReducer\";\n// import { useDispatch } from \"react-redux\";\nimport { Formik, Form } from \"formik\";\nimport * as yup from \"yup\";\n\nconst SignupForm = () => {\n  const validate = yup.object({\n    name: yup\n      .string()\n      .required(\"Name Is Required\")\n      .max(10, \"Must be 10 or less letters \"),\n    email: yup.string().email(\"invalid email\").required(\"email is required\"),\n    password: yup\n      .string()\n      .required(\"Password is Required\")\n      .min(6, \"At Least 6 Character\"),\n      // role: yup\n      // .string()\n      // .required(\"Role is Required\")\n      \n    //confirmPassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match'),\n  });\n  const navigate = useNavigate();\nconst [values,setValues] = useState()\n//const [role,setRole] = useState()\n\n  const options = [\n    { value: \"user\", label: \"User\" },\n    { value: \"admin\", label: \"Admin\" },\n  ];\n\n  const handleSignup = (e) => {\n    e.preventDefault()\n    navigate(\"/LoginForm\");\n    var users = JSON.parse(localStorage.getItem(\"users\")) || [];\n    // users.push({\n    //   name: values.name,\n    //   email: values.email,\n    //   password: btoa(values.password),\n    //   role: values.role,\n    // });\n\n    // Store the updated array back into localStorage\n    localStorage.setItem(\"users\", JSON.stringify(users));\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: \"\",\n          email: \"\",\n          password: \"\",\n          role: \"\",\n        }}\n        validationSchema={validate}\n      >\n        {(Formik) => (\n          <div className=\"container m-5\">\n            <Form>\n              <div className=\"row justify-content-center\">\n                <div className=\"form-group col-md-4 col-md-offset-5 align-center \">\n                  <h1 className=\"m-5 text-center\">SignUp </h1>\n                  <TextField label=\"Name: \" type=\"text\" name=\"name\" />\n                  <TextField label=\"Email: \" type=\"email\" name=\"email\" />\n                  <TextField\n                    label=\"Password: \"\n                    type=\"password\"\n                    name=\"password\"\n                  />\n\n                  <div className=\"mb-3\">\n                    <SelectField\n                    label={options.label}\n                      options={options}\n                      value={values.options}\n                      onChange={(e) =>\n                        setValues({ ...values, options: e.target.value })\n                      }\n                    />\n                  </div>\n                  <div>\n                    <AddBtn\n                      style={{\n                        marginLeft: \"64px\",\n                        marginTop: \"20px\",\n                        backgroundColor: \"#1070ef\",\n                        color: \"white\",\n                        width: \"99px\",\n                      }}\n                      onClick={handleSignup}\n                    >\n                      {\" \"}\n                      SignUP\n                    </AddBtn>\n                  </div>\n                </div>\n              </div>\n            </Form>\n          </div>\n        )}\n      </Formik>\n\n    </>\n  );\n};\n\nexport default SignupForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}