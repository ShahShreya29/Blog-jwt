{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = [];\nconst blogSlice = createSlice({\n  name: \"blogs\",\n  initialState,\n  reducers: {\n    addBlog: (state, action) => {\n      const newBlog = {\n        id: state.length + 1,\n        ...action.payload\n      };\n      state.push(newBlog);\n      localStorage.setItem(\"blogs\", JSON.stringify(state));\n    },\n    deleteBlog: (state, action) => {\n      const id = action.payload;\n      let blogs = JSON.parse(localStorage.getItem(\"blogs\"));\n      debugger;\n      blogs = blogs.filter(blog => blog.id !== +id);\n      console.log(blogs);\n      // localStorage.setItem(\"blogs\", JSON.stringify(state));\n      // return;\n    },\n    editBlog: (state, action) => {\n      const {\n        id,\n        ...updatedBlogData\n      } = action.payload;\n      const blogIndex = state.findIndex(blog => blog.id === id);\n      if (blogIndex !== -1) {\n        state[blogIndex] = {\n          ...state[blogIndex],\n          ...updatedBlogData\n        };\n      }\n    }\n  }\n});\nexport const {\n  addBlog,\n  deleteBlog,\n  editBlog\n} = blogSlice.actions;\nexport default blogSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","blogSlice","name","reducers","addBlog","state","action","newBlog","id","length","payload","push","localStorage","setItem","JSON","stringify","deleteBlog","blogs","parse","getItem","filter","blog","console","log","editBlog","updatedBlogData","blogIndex","findIndex","actions","reducer"],"sources":["/home/shreya/Documents/react/blog-app/src/BlogReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst blogSlice = createSlice({\n  name: \"blogs\",\n  initialState,\n  reducers: {\n    addBlog: (state, action) => {\n      const newBlog = {\n        id: state.length + 1,\n        ...action.payload,\n      };\n      state.push(newBlog);\n      localStorage.setItem(\"blogs\", JSON.stringify(state));\n\n    },\n    deleteBlog: (state, action) => {\n      const id = action.payload;\n      let blogs = JSON.parse(localStorage.getItem(\"blogs\"));\n      debugger\n      blogs = blogs.filter((blog) => blog.id !== +id);\n      console.log(blogs)\n      // localStorage.setItem(\"blogs\", JSON.stringify(state));\n      // return;\n    },\n    editBlog: (state, action) => {\n      const { id, ...updatedBlogData } = action.payload;\n      const blogIndex = state.findIndex((blog) => blog.id === id);\n      if (blogIndex !== -1) {\n        state[blogIndex] = { ...state[blogIndex], ...updatedBlogData };\n      }\n    },\n  },\n});\n\nexport const { addBlog, deleteBlog, editBlog } = blogSlice.actions;\nexport default blogSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG,EAAE;AAEvB,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC5BG,IAAI,EAAE,OAAO;EACbF,YAAY;EACZG,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B,MAAMC,OAAO,GAAG;QACdC,EAAE,EAAEH,KAAK,CAACI,MAAM,GAAG,CAAC;QACpB,GAAGH,MAAM,CAACI;MACZ,CAAC;MACDL,KAAK,CAACM,IAAI,CAACJ,OAAO,CAAC;MACnBK,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACV,KAAK,CAAC,CAAC;IAEtD,CAAC;IACDW,UAAU,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAME,EAAE,GAAGF,MAAM,CAACI,OAAO;MACzB,IAAIO,KAAK,GAAGH,IAAI,CAACI,KAAK,CAACN,YAAY,CAACO,OAAO,CAAC,OAAO,CAAC,CAAC;MACrD;MACAF,KAAK,GAAGA,KAAK,CAACG,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACb,EAAE,KAAK,CAACA,EAAE,CAAC;MAC/Cc,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;MAClB;MACA;IACF,CAAC;IACDO,QAAQ,EAAEA,CAACnB,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAM;QAAEE,EAAE;QAAE,GAAGiB;MAAgB,CAAC,GAAGnB,MAAM,CAACI,OAAO;MACjD,MAAMgB,SAAS,GAAGrB,KAAK,CAACsB,SAAS,CAAEN,IAAI,IAAKA,IAAI,CAACb,EAAE,KAAKA,EAAE,CAAC;MAC3D,IAAIkB,SAAS,KAAK,CAAC,CAAC,EAAE;QACpBrB,KAAK,CAACqB,SAAS,CAAC,GAAG;UAAE,GAAGrB,KAAK,CAACqB,SAAS,CAAC;UAAE,GAAGD;QAAgB,CAAC;MAChE;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAErB,OAAO;EAAEY,UAAU;EAAEQ;AAAS,CAAC,GAAGvB,SAAS,CAAC2B,OAAO;AAClE,eAAe3B,SAAS,CAAC4B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}