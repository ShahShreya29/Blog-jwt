{"ast":null,"code":"var _jsxFileName = \"/home/shreya/Documents/react/blog-app/src/Components/SignupForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TextField from \"./TextField\";\nimport AddBtn from \"./AddBtn\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport SelectField from \"./SelectField\";\nimport { Formik, Form } from \"formik\";\nimport * as yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { signUP } from \"../AuthReducer\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignupForm = () => {\n  _s();\n  const validates = yup.object().shape({\n    name: yup.string().required(\"Name Is Required\").max(10, \"Must be 10 or less letters \"),\n    email: yup.string().email(\"invalid email\").required(\"email is required\"),\n    password: yup.string().required(\"Password is Required\").min(6, \"At Least 6 Character\")\n    // role: yup.string().required(\"Role is Required\"),\n  });\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [values, setValues] = useState();\n  const options = [{\n    value: \"user\",\n    label: \"User\"\n  }, {\n    value: \"admin\",\n    label: \"Admin\"\n  }];\n  const handleSignup = () => {\n    var users = JSON.parse(localStorage.getItem(\"users\")) || [];\n    console.log(users);\n    const existingUser = users.find(user => user.email === values.email);\n    if (existingUser) {\n      alert('User Already Exists');\n    } else {\n      users.push({\n        name: values.name,\n        email: values.email,\n        password: btoa(values.password),\n        role: values.options\n      });\n      localStorage.setItem(\"users\", JSON.stringify(users));\n      dispatch(signUP(values));\n    }\n\n    //     users.push({\n    //       name: e.name,\n    //       email: e.email,\n    //       password: btoa(e.password),\n    //       role: values.options,\n    //     });\n\n    //     // Store the updated array back into localStorage\n    //     localStorage.setItem(\"users\", JSON.stringify(users));\n    //   }\n  };\n\n  //  };\n\n  // const handleSignup = (e) => {\n  //   //  e.preventDefault();\n\n  //   const formData = {\n  //     name: e.name,\n  //     email: e.email,\n  //     password: e.password,\n  //     role: values.options,\n  //   };\n\n  //   const errors = validates.validate(formData);\n\n  //   if (errors.length > 0) {\n  //     alert(errors.join(\"\\n\"));\n  //   } else {\n  //     console.log(formData);\n  //     alert(\"login successfully\");\n  //     navigate(\"/LoginForm\");\n  //     var users = JSON.parse(localStorage.getItem(\"users\")) || [];\n  //     users.push({\n  //       name: e.name,\n  //       email: e.email,\n  //       password: btoa(e.password),\n  //       role: values.options,\n  //     });\n\n  //     // Store the updated array back into localStorage\n  //     localStorage.setItem(\"users\", JSON.stringify(users));\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: \"\",\n        email: \"\",\n        password: \"\"\n      },\n      validationSchema: validates,\n      onSubmit: handleSignup,\n      children: Formik => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container m-5\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group col-md-4 col-md-offset-5 align-center \",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"m-5 text-center\",\n                children: \"SignUp \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Name: \",\n                type: \"text\",\n                name: \"name\",\n                id: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Email: \",\n                type: \"email\",\n                name: \"email\",\n                id: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Password: \",\n                type: \"password\",\n                name: \"password\",\n                id: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(SelectField, {\n                  name: \"role\",\n                  label: options.label,\n                  options: options,\n                  value: options.value,\n                  onChange: e => setValues({\n                    ...values,\n                    options: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(AddBtn, {\n                  style: {\n                    marginLeft: \"130px\",\n                    marginTop: \"10px\",\n                    backgroundColor: \"#1070ef\",\n                    color: \"white\",\n                    width: \"99px\"\n                  },\n                  children: [\" \", \"SignUP\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"text-center m-3\",\n                children: [\"Already Have Account \", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/LoginForm\",\n                  children: \"LogIn!!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 44\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(SignupForm, \"tJisGfQYl6Eke+j5QGFaKvhtZto=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = SignupForm;\nexport default SignupForm;\n\n//confirmPassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match'),\nvar _c;\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"names":["React","useState","TextField","AddBtn","Link","useNavigate","SelectField","Formik","Form","yup","useDispatch","signUP","jsxDEV","_jsxDEV","Fragment","_Fragment","SignupForm","_s","validates","object","shape","name","string","required","max","email","password","min","dispatch","navigate","values","setValues","options","value","label","handleSignup","users","JSON","parse","localStorage","getItem","console","log","existingUser","find","user","alert","push","btoa","role","setItem","stringify","children","initialValues","validationSchema","onSubmit","className","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","e","target","style","marginLeft","marginTop","backgroundColor","color","width","to","_c","$RefreshReg$"],"sources":["/home/shreya/Documents/react/blog-app/src/Components/SignupForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport TextField from \"./TextField\";\nimport AddBtn from \"./AddBtn\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport SelectField from \"./SelectField\";\nimport { Formik, Form } from \"formik\";\nimport * as yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { signUP } from \"../AuthReducer\";\n\n\nconst SignupForm = () => {\n  const validates = yup.object().shape({\n    name: yup\n      .string()\n      .required(\"Name Is Required\")\n      .max(10, \"Must be 10 or less letters \"),\n    email: yup.string().email(\"invalid email\").required(\"email is required\"),\n    password: yup\n      .string()\n      .required(\"Password is Required\")\n      .min(6, \"At Least 6 Character\"),\n    // role: yup.string().required(\"Role is Required\"),\n  });\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [values, setValues] = useState();\n\n\n  const options = [\n    { value: \"user\", label: \"User\" },\n    { value: \"admin\", label: \"Admin\" },\n  ];\n\nconst handleSignup = () => {\n  var users = JSON.parse(localStorage.getItem(\"users\")) || [];\n  console.log(users)\n  const existingUser = users.find(user => user.email=== values.email);\n  if(existingUser){\n    alert('User Already Exists')\n  }else{\n    users.push({\n              name: values.name,\n              email: values.email,\n              password: btoa(values.password),\n              role: values.options,\n \n    });\n    localStorage.setItem(\"users\", JSON.stringify(users));\n  \n    dispatch(signUP(values))\n  }\n  \n  //     users.push({\n  //       name: e.name,\n  //       email: e.email,\n  //       password: btoa(e.password),\n  //       role: values.options,\n  //     });\n\n  //     // Store the updated array back into localStorage\n  //     localStorage.setItem(\"users\", JSON.stringify(users));\n  //   }\n}\n   \n//  };\n\n\n\n  // const handleSignup = (e) => {\n  //   //  e.preventDefault();\n\n  //   const formData = {\n  //     name: e.name,\n  //     email: e.email,\n  //     password: e.password,\n  //     role: values.options,\n  //   };\n\n  //   const errors = validates.validate(formData);\n\n  //   if (errors.length > 0) {\n  //     alert(errors.join(\"\\n\"));\n  //   } else {\n  //     console.log(formData);\n  //     alert(\"login successfully\");\n  //     navigate(\"/LoginForm\");\n  //     var users = JSON.parse(localStorage.getItem(\"users\")) || [];\n  //     users.push({\n  //       name: e.name,\n  //       email: e.email,\n  //       password: btoa(e.password),\n  //       role: values.options,\n  //     });\n\n  //     // Store the updated array back into localStorage\n  //     localStorage.setItem(\"users\", JSON.stringify(users));\n  //   }\n  // };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: \"\",\n          email: \"\",\n          password: \"\",\n        }}\n        validationSchema={validates}\n        onSubmit={handleSignup}\n      >\n        {(Formik) => (\n          <div className=\"container m-5\">\n              <Form>\n                <div className=\"row justify-content-center\">\n                  <div className=\"form-group col-md-4 col-md-offset-5 align-center \">\n                    <h1 className=\"m-5 text-center\">SignUp </h1>\n                    <TextField\n                      label=\"Name: \"\n                      type=\"text\"\n                      name=\"name\"\n                      id=\"name\"\n                    />\n                    <TextField\n                      label=\"Email: \"\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"email\"\n                    />\n                    <TextField\n                      label=\"Password: \"\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"password\"\n                    />\n\n                    <div className=\"mb-3\">\n                      <SelectField\n                        name=\"role\"\n                        label={options.label}\n                        options={options}\n                        value={options.value}\n                        onChange={(e) =>\n                          setValues({ ...values, options: e.target.value })\n                        }\n                      />\n                    </div>\n                    <div>\n                      <AddBtn\n                        style={{\n                          marginLeft: \"130px\",\n                          marginTop: \"10px\",\n                          backgroundColor: \"#1070ef\",\n                          color: \"white\",\n                          width: \"99px\",\n                        }}\n                      >\n                        {\" \"}\n                        SignUP\n                      </AddBtn>\n                    </div>\n                    <h6 className=\"text-center m-3\">\n                      Already Have Account <Link to=\"/LoginForm\">LogIn!!</Link>\n                    </h6>\n                  </div>\n                </div>\n              </Form>\n      \n          </div>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default SignupForm;\n\n//confirmPassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match'),\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}