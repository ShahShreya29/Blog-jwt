{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = [];\nconst blogSlice = createSlice({\n  name: \"blogs\",\n  initialState,\n  reducers: {\n    addBlog: (state, action) => {\n      var newBlog = JSON.parse(localStorage.getItem(\"blogs\")) || [];\n      newBlog = {\n        id: state.length + 1,\n        ...action.payload,\n        ...state\n      };\n      state.push(newBlog);\n      localStorage.setItem(\"blogs\", JSON.stringify(newBlog));\n    },\n    deleteBlog: (state, action) => {\n      const id = action.payload;\n      return state.filter(blog => blog.id !== id);\n    },\n    editBlog: (state, action) => {\n      const {\n        id,\n        ...updatedBlogData\n      } = action.payload;\n      const blogIndex = state.findIndex(blog => blog.id === id);\n      if (blogIndex !== -1) {\n        state[blogIndex] = {\n          ...state[blogIndex],\n          ...updatedBlogData\n        };\n      }\n    }\n  }\n});\nexport const {\n  addBlog,\n  deleteBlog,\n  editBlog\n} = blogSlice.actions;\nexport default blogSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","blogSlice","name","reducers","addBlog","state","action","newBlog","JSON","parse","localStorage","getItem","id","length","payload","push","setItem","stringify","deleteBlog","filter","blog","editBlog","updatedBlogData","blogIndex","findIndex","actions","reducer"],"sources":["/home/shreya/Documents/react/blog-app/src/BlogReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nconst blogSlice = createSlice({\n  name: \"blogs\",\n  initialState,\n  reducers: {\n    addBlog: (state, action) => {\n      var newBlog = JSON.parse(localStorage.getItem(\"blogs\")) || [];\n      newBlog = {\n        id: state.length + 1,\n        ...action.payload,\n        ...state,\n      };\n      state.push(newBlog);\n      localStorage.setItem(\"blogs\", JSON.stringify(newBlog));\n    },\n    deleteBlog: (state, action) => {\n      const id = action.payload;\n      return state.filter((blog) => blog.id !== id);\n    },\n    editBlog: (state, action) => {\n      const { id, ...updatedBlogData } = action.payload;\n      const blogIndex = state.findIndex((blog) => blog.id === id);\n      if (blogIndex !== -1) {\n        state[blogIndex] = { ...state[blogIndex], ...updatedBlogData };\n      }\n    },\n  },\n});\n\nexport const { addBlog, deleteBlog, editBlog } = blogSlice.actions;\nexport default blogSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG,EAAE;AAEvB,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC5BG,IAAI,EAAE,OAAO;EACbF,YAAY;EACZG,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B,IAAIC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;MAC7DJ,OAAO,GAAG;QACRK,EAAE,EAAEP,KAAK,CAACQ,MAAM,GAAG,CAAC;QACpB,GAAGP,MAAM,CAACQ,OAAO;QACjB,GAAGT;MACL,CAAC;MACDA,KAAK,CAACU,IAAI,CAACR,OAAO,CAAC;MACnBG,YAAY,CAACM,OAAO,CAAC,OAAO,EAAER,IAAI,CAACS,SAAS,CAACV,OAAO,CAAC,CAAC;IACxD,CAAC;IACDW,UAAU,EAAEA,CAACb,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAMM,EAAE,GAAGN,MAAM,CAACQ,OAAO;MACzB,OAAOT,KAAK,CAACc,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACR,EAAE,KAAKA,EAAE,CAAC;IAC/C,CAAC;IACDS,QAAQ,EAAEA,CAAChB,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAM;QAAEM,EAAE;QAAE,GAAGU;MAAgB,CAAC,GAAGhB,MAAM,CAACQ,OAAO;MACjD,MAAMS,SAAS,GAAGlB,KAAK,CAACmB,SAAS,CAAEJ,IAAI,IAAKA,IAAI,CAACR,EAAE,KAAKA,EAAE,CAAC;MAC3D,IAAIW,SAAS,KAAK,CAAC,CAAC,EAAE;QACpBlB,KAAK,CAACkB,SAAS,CAAC,GAAG;UAAE,GAAGlB,KAAK,CAACkB,SAAS,CAAC;UAAE,GAAGD;QAAgB,CAAC;MAChE;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAElB,OAAO;EAAEc,UAAU;EAAEG;AAAS,CAAC,GAAGpB,SAAS,CAACwB,OAAO;AAClE,eAAexB,SAAS,CAACyB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}