{"ast":null,"code":"import axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"http://localhost:8081/\" // our API base URL\n});\n\n// Request interceptor for adding the bearer token\napi.interceptors.request.use(config => {\n  const token = JSON.parse(localStorage.getItem(\"login\"));\n  if (token) {\n    config.headers.Authorization = `Bearer ${token.token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// API endpoints\nexport const getUser = () => {\n  return api.get(\"/user\");\n};\nexport const deleteUser = userId => {\n  return api.delete(`/user/${userId}`);\n};\n\n// Export the api instance\nexport default api;\n\n// https://coderomeos.org/axios-interceptors-in-a-react-application\n\n// // Create axios instance for specific base URL\n// const axiosInstance = axios.create({\n//   baseURL: \"http://localhost:8081/api/\",\n// });\n\n// // Add request interceptor for attaching token to requests\n// axiosInstance.interceptors.request.use(\n//   (config) => {\n//     const token = JSON.parse(localStorage.getItem(\"login\"));\n//     if (token) {\n//       config.headers.Authorization = `Bearer ${token.token}`;\n//     }\n//     return config;\n//   },\n//   (error) => {\n//     return Promise.reject(error);\n//   }\n// );\n\n// Add response interceptor for handling token expiration\naxiosInstance.interceptors.response.use(response => {\n  console.log(\"RES\", response);\n  return response;\n}, async error => {\n  if (error.response && error.response.status === 419) {\n    console.log(\"Token expired, refreshing...\");\n    try {\n      const refreshToken = JSON.parse(localStorage.getItem(\"login\")).refreshToken;\n      if (!refreshToken) {\n        console.log(\"No refresh token provided.\");\n        throw new Error(\"No refresh token provided.\");\n      }\n      const response = await api.get(\"api/blogList\");\n      if (response.status === 200) {\n        localStorage.setItem(\"login\", JSON.stringify(response.data));\n        console.log('Token refreshed');\n        return axiosInstance(error.config); // Retry the original request\n      }\n    } catch (refreshError) {\n      console.error(\"Error refreshing token:\", refreshError);\n    }\n  }\n  return Promise.reject(error);\n});","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","token","JSON","parse","localStorage","getItem","headers","Authorization","error","Promise","reject","getUser","get","deleteUser","userId","delete","axiosInstance","response","console","log","status","refreshToken","Error","setItem","stringify","data","refreshError"],"sources":["/home/shreya/Documents/jwt/blog-app/src/config.js"],"sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"http://localhost:8081/\", // our API base URL\n});\n\n// Request interceptor for adding the bearer token\napi.interceptors.request.use(\n  (config) => {\n    const token = JSON.parse(localStorage.getItem(\"login\"));\n    if (token) {\n      config.headers.Authorization = `Bearer ${token.token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// API endpoints\nexport const getUser = () => {\n  return api.get(\"/user\");\n};\n\nexport const deleteUser = (userId) => {\n  return api.delete(`/user/${userId}`);\n};\n\n// Export the api instance\nexport default api;\n\n\n\n// https://coderomeos.org/axios-interceptors-in-a-react-application\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // Create axios instance for specific base URL\n// const axiosInstance = axios.create({\n//   baseURL: \"http://localhost:8081/api/\",\n// });\n\n// // Add request interceptor for attaching token to requests\n// axiosInstance.interceptors.request.use(\n//   (config) => {\n//     const token = JSON.parse(localStorage.getItem(\"login\"));\n//     if (token) {\n//       config.headers.Authorization = `Bearer ${token.token}`;\n//     }\n//     return config;\n//   },\n//   (error) => {\n//     return Promise.reject(error);\n//   }\n// );\n\n// Add response interceptor for handling token expiration\naxiosInstance.interceptors.response.use(\n  (response) => {\n    console.log(\"RES\", response);\n    return response;\n  },\n  async (error) => {\n    if (error.response && error.response.status === 419) {\n      console.log(\"Token expired, refreshing...\");\n      try {\n        const refreshToken = JSON.parse(localStorage.getItem(\"login\")).refreshToken;\n        if (!refreshToken) {\n          console.log(\"No refresh token provided.\");\n          throw new Error(\"No refresh token provided.\");\n        }\n        const response = await api.get(\"api/blogList\");\n        if (response.status === 200) {\n          localStorage.setItem(\"login\", JSON.stringify(response.data));\n          console.log('Token refreshed');\n          return axiosInstance(error.config); // Retry the original request\n        }\n      } catch (refreshError) {\n        console.error(\"Error refreshing token:\", refreshError);\n      }\n    }\n    return Promise.reject(error);\n  }\n);\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,wBAAwB,CAAE;AACrC,CAAC,CAAC;;AAEF;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EACvD,IAAIJ,KAAK,EAAE;IACTD,MAAM,CAACM,OAAO,CAACC,aAAa,GAAI,UAASN,KAAK,CAACA,KAAM,EAAC;EACxD;EACA,OAAOD,MAAM;AACf,CAAC,EACAQ,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMG,OAAO,GAAGA,CAAA,KAAM;EAC3B,OAAOjB,GAAG,CAACkB,GAAG,CAAC,OAAO,CAAC;AACzB,CAAC;AAED,OAAO,MAAMC,UAAU,GAAIC,MAAM,IAAK;EACpC,OAAOpB,GAAG,CAACqB,MAAM,CAAE,SAAQD,MAAO,EAAC,CAAC;AACtC,CAAC;;AAED;AACA,eAAepB,GAAG;;AAIlB;;AAmBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACAsB,aAAa,CAACnB,YAAY,CAACoB,QAAQ,CAAClB,GAAG,CACpCkB,QAAQ,IAAK;EACZC,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEF,QAAQ,CAAC;EAC5B,OAAOA,QAAQ;AACjB,CAAC,EACD,MAAOT,KAAK,IAAK;EACf,IAAIA,KAAK,CAACS,QAAQ,IAAIT,KAAK,CAACS,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;IACnDF,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC3C,IAAI;MACF,MAAME,YAAY,GAAGnB,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAACgB,YAAY;MAC3E,IAAI,CAACA,YAAY,EAAE;QACjBH,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;QACzC,MAAM,IAAIG,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MACA,MAAML,QAAQ,GAAG,MAAMvB,GAAG,CAACkB,GAAG,CAAC,cAAc,CAAC;MAC9C,IAAIK,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;QAC3BhB,YAAY,CAACmB,OAAO,CAAC,OAAO,EAAErB,IAAI,CAACsB,SAAS,CAACP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAC5DP,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;QAC9B,OAAOH,aAAa,CAACR,KAAK,CAACR,MAAM,CAAC,CAAC,CAAC;MACtC;IACF,CAAC,CAAC,OAAO0B,YAAY,EAAE;MACrBR,OAAO,CAACV,KAAK,CAAC,yBAAyB,EAAEkB,YAAY,CAAC;IACxD;EACF;EACA,OAAOjB,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}