{"ast":null,"code":"var _jsxFileName = \"/home/shreya/Documents/react/blog-app/src/Components/SignupForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TextField from \"./TextField\";\nimport AddBtn from \"./AddBtn\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport SelectField from \"./SelectField\";\nimport { Formik, Form } from \"formik\";\nimport * as yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { signUP } from \"../AuthReducer\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignupForm = () => {\n  _s();\n  const validates = yup.object().shape({\n    name: yup.string().required(\"Name Is Required\").max(10, \"Must be 10 or less letters \"),\n    email: yup.string().email(\"invalid email\").required(\"email is required\"),\n    password: yup.string().required(\"Password is Required\").min(6, \"At Least 6 Character\")\n    // role: yup.string().required(\"Role is Required\"),\n  });\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [values, setValues] = useState();\n  const options = [{\n    value: \"user\",\n    label: \"User\"\n  }, {\n    value: \"admin\",\n    label: \"Admin\"\n  }];\n  const handleSignup = () => {\n    var users = JSON.parse(localStorage.getItem(\"users\")) || [];\n    console.log(users);\n    const existingUser = users.find(user => user.email === values.email);\n    if (existingUser) {\n      alert(\"User Already Exists\");\n    } else {\n      users.push({\n        name: values.name,\n        email: values.email,\n        password: btoa(values.password),\n        role: values.options\n      });\n      localStorage.setItem(\"users\", JSON.stringify(users));\n      dispatch(signUP(values));\n    }\n\n    // const handleSignup = (e) => {\n    //   //  e.preventDefault();\n\n    //   const formData = {\n    //     name: e.name,\n    //     email: e.email,\n    //     password: e.password,\n    //     role: values.options,\n    //   };\n\n    //   const errors = validates.validate(formData);\n\n    //   if (errors.length > 0) {\n    //     alert(errors.join(\"\\n\"));\n    //   } else {\n    //     console.log(formData);\n    //     alert(\"login successfully\");\n    //     navigate(\"/LoginForm\");\n    //     var users = JSON.parse(localStorage.getItem(\"users\")) || [];\n    //     users.push({\n    //       name: e.name,\n    //       email: e.email,\n    //       password: btoa(e.password),\n    //       role: values.options,\n    //     });\n\n    //     // Store the updated array back into localStorage\n    //     localStorage.setItem(\"users\", JSON.stringify(users));\n    //   }\n    // };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          name: \"\",\n          email: \"\",\n          password: \"\"\n        },\n        validationSchema: validates,\n        onSubmit: handleSignup,\n        children: Formik => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container m-5\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row justify-content-center\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group col-md-4 col-md-offset-5 align-center \",\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"m-5 text-center\",\n                  children: \"SignUp \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Name: \",\n                  type: \"text\",\n                  name: \"name\",\n                  id: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Email: \",\n                  type: \"email\",\n                  name: \"email\",\n                  id: \"email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Password: \",\n                  type: \"password\",\n                  name: \"password\",\n                  id: \"password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(SelectField, {\n                    name: \"role\",\n                    label: options.label,\n                    options: options,\n                    value: options.value,\n                    onChange: e => setValues({\n                      ...values,\n                      options: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(AddBtn, {\n                    style: {\n                      marginLeft: \"130px\",\n                      marginTop: \"10px\",\n                      backgroundColor: \"#1070ef\",\n                      color: \"white\",\n                      width: \"99px\"\n                    },\n                    children: [\" \", \"SignUP\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                  className: \"text-center m-3\",\n                  children: [\"Already Have Account \", /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/LoginForm\",\n                    children: \"LogIn!!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 44\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n};\n_s(SignupForm, \"tJisGfQYl6Eke+j5QGFaKvhtZto=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = SignupForm;\nexport default SignupForm;\n\n//confirmPassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match')\nvar _c;\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"names":["React","useState","TextField","AddBtn","Link","useNavigate","SelectField","Formik","Form","yup","useDispatch","signUP","jsxDEV","_jsxDEV","Fragment","_Fragment","SignupForm","_s","validates","object","shape","name","string","required","max","email","password","min","dispatch","navigate","values","setValues","options","value","label","handleSignup","users","JSON","parse","localStorage","getItem","console","log","existingUser","find","user","alert","push","btoa","role","setItem","stringify","children","initialValues","validationSchema","onSubmit","className","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","e","target","style","marginLeft","marginTop","backgroundColor","color","width","to","_c","$RefreshReg$"],"sources":["/home/shreya/Documents/react/blog-app/src/Components/SignupForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport TextField from \"./TextField\";\nimport AddBtn from \"./AddBtn\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport SelectField from \"./SelectField\";\nimport { Formik, Form } from \"formik\";\nimport * as yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { signUP } from \"../AuthReducer\";\n\nconst SignupForm = () => {\n  const validates = yup.object().shape({\n    name: yup\n      .string()\n      .required(\"Name Is Required\")\n      .max(10, \"Must be 10 or less letters \"),\n    email: yup.string().email(\"invalid email\").required(\"email is required\"),\n    password: yup\n      .string()\n      .required(\"Password is Required\")\n      .min(6, \"At Least 6 Character\"),\n    // role: yup.string().required(\"Role is Required\"),\n  });\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [values, setValues] = useState();\n\n  const options = [\n    { value: \"user\", label: \"User\" },\n    { value: \"admin\", label: \"Admin\" },\n  ];\n\n  const handleSignup = () => {\n    var users = JSON.parse(localStorage.getItem(\"users\")) || [];\n    console.log(users);\n    const existingUser = users.find((user) => user.email === values.email);\n    if (existingUser) {\n      alert(\"User Already Exists\");\n    } else {\n      users.push({\n        name: values.name,\n        email: values.email,\n        password: btoa(values.password),\n        role: values.options,\n      });\n      localStorage.setItem(\"users\", JSON.stringify(users));\n\n      dispatch(signUP(values));\n    }\n\n    // const handleSignup = (e) => {\n    //   //  e.preventDefault();\n\n    //   const formData = {\n    //     name: e.name,\n    //     email: e.email,\n    //     password: e.password,\n    //     role: values.options,\n    //   };\n\n    //   const errors = validates.validate(formData);\n\n    //   if (errors.length > 0) {\n    //     alert(errors.join(\"\\n\"));\n    //   } else {\n    //     console.log(formData);\n    //     alert(\"login successfully\");\n    //     navigate(\"/LoginForm\");\n    //     var users = JSON.parse(localStorage.getItem(\"users\")) || [];\n    //     users.push({\n    //       name: e.name,\n    //       email: e.email,\n    //       password: btoa(e.password),\n    //       role: values.options,\n    //     });\n\n    //     // Store the updated array back into localStorage\n    //     localStorage.setItem(\"users\", JSON.stringify(users));\n    //   }\n    // };\n\n    return (\n      <>\n        <Formik\n          initialValues={{\n            name: \"\",\n            email: \"\",\n            password: \"\",\n          }}\n          validationSchema={validates}\n          onSubmit={handleSignup}\n        >\n          {(Formik) => (\n            <div className=\"container m-5\">\n              <Form>\n                <div className=\"row justify-content-center\">\n                  <div className=\"form-group col-md-4 col-md-offset-5 align-center \">\n                    <h1 className=\"m-5 text-center\">SignUp </h1>\n                    <TextField\n                      label=\"Name: \"\n                      type=\"text\"\n                      name=\"name\"\n                      id=\"name\"\n                    />\n                    <TextField\n                      label=\"Email: \"\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"email\"\n                    />\n                    <TextField\n                      label=\"Password: \"\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"password\"\n                    />\n\n                    <div className=\"mb-3\">\n                      <SelectField\n                        name=\"role\"\n                        label={options.label}\n                        options={options}\n                        value={options.value}\n                        onChange={(e) =>\n                          setValues({ ...values, options: e.target.value })\n                        }\n                      />\n                    </div>\n                    <div>\n                      <AddBtn\n                        style={{\n                          marginLeft: \"130px\",\n                          marginTop: \"10px\",\n                          backgroundColor: \"#1070ef\",\n                          color: \"white\",\n                          width: \"99px\",\n                        }}\n                      >\n                        {\" \"}\n                        SignUP\n                      </AddBtn>\n                    </div>\n                    <h6 className=\"text-center m-3\">\n                      Already Have Account <Link to=\"/LoginForm\">LogIn!!</Link>\n                    </h6>\n                  </div>\n                </div>\n              </Form>\n            </div>\n          )}\n        </Formik>\n      </>\n    );\n  };\n};\n\nexport default SignupForm;\n\n//confirmPassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match')\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}