{"ast":null,"code":"var _jsxFileName = \"/home/shreya/Documents/react/blog-app/src/Components/SignupForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TextField from \"./TextField\";\nimport AddBtn from \"./AddBtn\";\nimport { useNavigate } from \"react-router-dom\";\nimport SelectField from \"./SelectField\";\n// import { signUP } from \"../AuthReducer\";\n// import { useDispatch } from \"react-redux\";\nimport { Formik, Form } from \"formik\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignupForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const [values, setValues] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    role: \"\"\n  });\n  const options = [{\n    value: \"user\",\n    label: \"User\"\n  }, {\n    value: \"admin\",\n    label: \"Admin\"\n  }];\n  const handleSignup = e => {\n    e.preventDefault();\n    if (!values.name || !values.email || !values.password || !values.role) {\n      alert(\"Please fill in all fields\");\n      return;\n    }\n    alert(\"Sign up successful!\");\n    navigate(\"/LoginForm\");\n    var users = JSON.parse(localStorage.getItem(\"users\")) || [];\n    users.push({\n      name: values.name,\n      email: values.email,\n      password: btoa(values.password),\n      role: values.role\n    });\n\n    // Store the updated array back into localStorage\n    localStorage.setItem(\"users\", JSON.stringify(users));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        role: \"\"\n      },\n      children: Formik => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"SignUp \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Name: \",\n              value: values.name,\n              onChange: e => setValues({\n                ...values,\n                name: e.target.value\n              }),\n              inputs: {\n                type: \"text\",\n                required: true,\n                pattern: \"^[A-Za-z]{3,16}$\"\n              },\n              errorMessage: \"Name have at-least 2 to 10 character and do not use any special character in name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Email: \",\n              value: values.email,\n              onChange: e => setValues({\n                ...values,\n                email: e.target.value\n              }),\n              inputs: {\n                type: \"text\",\n                required: true,\n                pattern: \"^[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}$\"\n              },\n              errorMessage: \"Enter valid email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Password: \",\n              value: values.password,\n              onChange: e => setValues({\n                ...values,\n                password: e.target.value\n              }),\n              inputs: {\n                type: \"password\",\n                required: true,\n                pattern: \"/^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*_)(?!.*W)(?!.* ).{8,16}$/\"\n              },\n              errorMessage: \"Password must contain digits,lowercase and uppercase letter, one underscore but no other special character and space and it must be 8-16 characters long\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(SelectField, {\n              label: options.label,\n              options: options,\n              value: values.role,\n              onChange: e => setValues({\n                ...values,\n                role: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(AddBtn, {\n              style: {\n                marginLeft: \"64px\",\n                marginTop: \"20px\",\n                backgroundColor: \"#1070ef\",\n                color: \"white\",\n                width: \"99px\"\n              },\n              onClick: handleSignup,\n              children: [\" \", \"SignUP\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(SignupForm, \"JlgCfs7LGVKtLVB1z1t6Z6dLbtw=\", false, function () {\n  return [useNavigate];\n});\n_c = SignupForm;\nexport default SignupForm;\nvar _c;\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"names":["React","useState","TextField","AddBtn","useNavigate","SelectField","Formik","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","SignupForm","_s","navigate","values","setValues","name","email","password","role","options","value","label","handleSignup","e","preventDefault","alert","users","JSON","parse","localStorage","getItem","push","btoa","setItem","stringify","children","initialValues","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","target","inputs","type","required","pattern","errorMessage","style","marginLeft","marginTop","backgroundColor","color","width","onClick","_c","$RefreshReg$"],"sources":["/home/shreya/Documents/react/blog-app/src/Components/SignupForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport TextField from \"./TextField\";\nimport AddBtn from \"./AddBtn\";\nimport { useNavigate } from \"react-router-dom\";\nimport SelectField from \"./SelectField\";\n// import { signUP } from \"../AuthReducer\";\n// import { useDispatch } from \"react-redux\";\nimport { Formik, Form } from \"formik\";\n\nconst SignupForm = () => {\n  const navigate = useNavigate();\n\n  const [values, setValues] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    role: \"\",\n  });\n\n  const options = [\n    { value: \"user\", label: \"User\" },\n    { value: \"admin\", label: \"Admin\" },\n  ];\n\n  const handleSignup = (e) => {\n    e.preventDefault();\n    if (!values.name || !values.email || !values.password || !values.role) {\n      alert(\"Please fill in all fields\");\n      return;\n    }\n    alert(\"Sign up successful!\");\n\n    navigate(\"/LoginForm\");\n    var users = JSON.parse(localStorage.getItem(\"users\")) || [];\n    users.push({\n      name: values.name,\n      email: values.email,\n      password: btoa(values.password),\n      role: values.role,\n    });\n\n    // Store the updated array back into localStorage\n    localStorage.setItem(\"users\", JSON.stringify(users));\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: \"\",\n          email: \"\",\n          password: \"\",\n          role: \"\",\n        }}\n      >\n        {(Formik) => (\n          <div>\n            <h1>SignUp </h1>\n            <Form>\n              <div className=\"mb-3\">\n                <TextField\n                  label=\"Name: \"\n                  value={values.name}\n                  onChange={(e) =>\n                    setValues({ ...values, name: e.target.value })\n                  }\n                  inputs={{\n                    type: \"text\",\n                    required: true,\n                    pattern: \"^[A-Za-z]{3,16}$\",\n                  }}\n                  errorMessage=\"Name have at-least 2 to 10 character and do not use any special character in name\"\n                />\n                <TextField\n                  label=\"Email: \"\n                  value={values.email}\n                  onChange={(e) =>\n                    setValues({ ...values, email: e.target.value })\n                  }\n                  inputs={{\n                    type: \"text\",\n                    required: true,\n                    pattern: \"^[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}$\",\n                  }}\n                  errorMessage=\"Enter valid email\"\n                  required={true}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <TextField\n                  label=\"Password: \"\n                  value={values.password}\n                  onChange={(e) =>\n                    setValues({ ...values, password: e.target.value })\n                  }\n                  inputs={{\n                    type: \"password\",\n                    required: true,\n                    pattern:\n                      \"/^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*_)(?!.*W)(?!.* ).{8,16}$/\",\n                  }}\n                  errorMessage=\"Password must contain digits,lowercase and uppercase letter, one underscore but no other special character and space and it must be 8-16 characters long\"\n                />\n              </div>\n              <div className=\"mb-3\">\n                <SelectField\n                  label={options.label}\n                  options={options}\n                  value={values.role}\n                  onChange={(e) =>\n                    setValues({ ...values, role: e.target.value })\n                  }\n                />\n              </div>\n              <div>\n                <AddBtn\n                  style={{\n                    marginLeft: \"64px\",\n                    marginTop: \"20px\",\n                    backgroundColor: \"#1070ef\",\n                    color: \"white\",\n                    width: \"99px\",\n                  }}\n                  onClick={handleSignup}\n                >\n                  {\" \"}\n                  SignUP\n                </AddBtn>\n              </div>\n            </Form>\n          </div>\n        )}\n      </Formik>\n\n      {/* <form style={{ marginLeft: \"554px\", marginTop: \"40px\", width: \"240px\" }}>\n        <h1>SignUp</h1>\n        <div className=\"mb-3\">\n          <TextField\n            label=\"Name: \"\n            value={values.name}\n            onChange={(e) => setValues({ ...values, name: e.target.value })}\n            inputs={{\n              type: \"text\",\n              required: true,\n              pattern: \"^[A-Za-z]{3,16}$\",\n            }}\n            errorMessage=\"Name have at-least 2 to 10 character and do not use any special character in name\"\n          />\n          <TextField\n            label=\"Email: \"\n            value={values.email}\n            onChange={(e) => setValues({ ...values, email: e.target.value })}\n            inputs={{\n              type: \"text\",\n              required: true,\n              pattern: \"^[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}$\",\n            }}\n            errorMessage=\"Enter valid email\"\n            required={true}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <TextField\n            label=\"Password: \"\n            value={values.password}\n            onChange={(e) => setValues({ ...values, password: e.target.value })}\n            inputs={{\n              type: \"password\",\n              required: true,\n              pattern:\n                \"/^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*_)(?!.*W)(?!.* ).{8,16}$/\",\n            }}\n            errorMessage=\"Password must contain digits,lowercase and uppercase letter, one underscore but no other special character and space and it must be 8-16 characters long\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <SelectField\n            label={options.label}\n            options={options}\n            value={values.role}\n            onChange={(e) => setValues({ ...values, role: e.target.value })}\n          />\n        </div>\n        <div>\n          <AddBtn\n            style={{\n              marginLeft: \"64px\",\n              marginTop: \"20px\",\n              backgroundColor: \"#1070ef\",\n              color: \"white\",\n              width: \"99px\",\n            }}\n            onClick={handleSignup}\n          >\n            {\" \"}\n            SignUP\n          </AddBtn>\n        </div>\n      </form> */}\n    </>\n  );\n};\n\nexport default SignupForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}