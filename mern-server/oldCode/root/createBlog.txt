const express = require("express");
const multer = require("multer");
const router = express.Router();
const blog = require("../models/blog");
const {verificationToken} = require('../../jwt/jwt')


const storage = multer.diskStorage({
  destination: function (req, file, cb) {
    return cb(null, "./uploads");
  },
  filename: function (req, file, cb) {
    const ext = file.originalname.split(".").pop();
    cb(null, `${file.fieldname}-${Date.now()}.${ext}`);
    
  },
});

const upload = multer({ storage: storage });

router.post("/addBlog", upload.single("blog_img"), async (req, res) => {
  try {
    
    const newBlog = new blog({
      blog_title: req.body.blog_title,
      blog_content: req.body.blog_content,
      blog_img: req.file.filename,
    });
  
    console.log(req.file);  
    const saveBlog = await newBlog.save();
    res.status(201).json(saveBlog);
  } catch (error) {
    console.log(error)
    res.status(500).json({ error: "Failed to add blog" });
  }
});
//  const imageData = blog_img.toString("base64");
router.get("/blogList",verificationToken, async (req, res) => { 
  try {
     
    const blogs = await blog.find().lean().exec();
    console.log(blogs)
    res. status(200).json(blogs);
  } catch (error) {
    res.status(500).json("error", error);
  }
});

router.get("/blogList/:id", async (req, res) => {
  try {
    const blogs = await blog.findById(req.params.id);
    res.status(200).json(blogs);

  } catch (error) {
    res.status(500).json("error", error);
  }
});

router.put("/updateBlog/:id", upload.single("blog_img"), async (req, res) => {
  try {
    const { id } = req.params;
    const { blog_title, blog_content } = req.body;

    const updatedBlog = {};
    if (blog_title) updatedBlog.blog_title = blog_title;
    if (blog_content) updatedBlog.blog_content = blog_content;
    if (req.file) updatedBlog.blog_img = req.file.filename;

    const blogs = await blog.findByIdAndUpdate(id, updatedBlog, { new: true });

    res.status(200).json(blogs);
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: "Failed to update blog" });
  }
});

router.delete("/deleteBlog/:id", async (req, res) => {
  try {
    const blogs = await blog.findByIdAndDelete(req.params.id);
    res.status(200).json(blogs);
  } catch (error) {
    res.status(500).json("error", error);
  }
});

module.exports = router;
